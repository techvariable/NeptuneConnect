{"version":3,"sources":["node_modules/gremlint/lib/formatQuery/types.js","node_modules/gremlint/lib/formatQuery/utils.js","node_modules/gremlint/lib/formatQuery/recreateQueryOnelinerFromSyntaxTree.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/utils.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatClosure.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatMethod.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatNonGremlin.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatString.js","node_modules/gremlint/lib/formatQuery/consts.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/getStepGroups/utils.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/getStepGroups/reduceSingleStepInStepGroup.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/getStepGroups/reduceLastStepInStepGroup.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/getStepGroups/reduceFirstStepInStepGroup.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/getStepGroups/reduceMiddleStepInStepGroup.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/getStepGroups/index.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatTraversal/index.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/formatWord.js","node_modules/gremlint/lib/formatQuery/formatSyntaxTrees/index.js","node_modules/gremlint/lib/formatQuery/parseToSyntaxTrees/extractGremlinQueries.js","node_modules/gremlint/lib/formatQuery/parseToSyntaxTrees/index.js","node_modules/gremlint/lib/formatQuery/recreateQueryStringFromFormattedSyntaxTrees.js","node_modules/gremlint/lib/formatQuery/index.js","node_modules/gremlint/lib/index.js","node_modules/@stencil/store/dist/index.mjs","src/components/editorPage/store.ts"],"names":["Object","defineProperty","exports","value","TokenType","choose","count","sum","neq","eq","spaces","pipe","last","array","slice","fns","_i","arguments","length","reduce","fn","numberOfSpaces","Array","join","a","b","_a","getCondition","getThen","getElse","params","apply","recreateQueryOnelinerFromSyntaxTree","localIndentation","syntaxTree","type","types_1","NonGremlinCode","code","Traversal","utils_1","steps","map","Method","method","Closure","closureCodeBlock","lineOfCode","relativeIndentation","concat","Math","max","String","string","Word","word","default","__assign","this","assign","t","s","i","n","p","prototype","hasOwnProperty","call","withIncreasedHorizontalPosition","withHorizontalPosition","withNoEndDotInfo","withZeroDotInfo","withDotInfo","withIncreasedIndentation","withZeroIndentation","withIndentation","config","indentationIncrease","shouldStartWithDot","shouldEndWithDot","horizontalPosition","horizontalPositionIncrease","formatClosure","getClosureLineOfCodeIndentation","methodWidth","lineNumber","getFormattedClosureLineOfCode","getFormattedClosureCodeBlock","unformattedClosureCodeBlock","formatSyntaxTree","unformattedMethod","maxLineLength","recreatedQuery","recreateQueryOnelinerFromSyntaxTree_1","formattedMethod","width","trim","Boolean","__spreadArray","to","from","pack","l","ar","formatMethod","utils_2","argumentsWillNotBeWrapped","argumentGroups","argumentGroup","argumentsShouldStartOnNewLine","step","lastArgumentGroup","formatNonGremlin","_config","split","formatString","STEP_MODULATORS","shouldStepBeLastStepInStepGroup","isStepFirstStepInStepGroup","isModulator","isTraversalSource","consts_1","includes","stepsInStepGroup","isLineTooLongWithSubsequentModulators","index","stepGroups","stepsWithSubsequentModulators","aggregator","hasReachedFinalModulator","stepGroupIndentationIncrease","traversalSourceIndentationIncrease","modulatorIndentationIncrease","recreatedQueryWithSubsequentModulators","lineIsTooLongWithSubsequentModulators","isFirstStepInStepGroup","isLastStep","nextStepIsModulator","stepShouldBeLastStepInStepGroup","reduceSingleStepInStepGroup","isFirstStepGroup","isLastStepGroup","utils_3","shouldPlaceDotsAfterLineBreaks","reduceLastStepInStepGroup","reduceFirstStepInStepGroup","reduceMiddleStepInStepGroup","getStepGroups","reduceSingleStepInStepGroup_1","reduceLastStepInStepGroup_1","reduceFirstStepInStepGroup_1","reduceMiddleStepInStepGroup_1","formatTraversal","initialHorizontalPositionIndentationIncrease","initialHorizontalPosition","stepIndex","formattedStep","getStepGroups_1","lastStepGroup","formatWord","formatSyntaxTrees","formatNonGremlin_1","formatTraversal_1","formatMethod_1","formatClosure_1","formatString_1","formatWord_1","syntaxTrees","extractGremlinQueries","LEFT_WHITE_PARENTHESIS","RIGHT_WHITE_PARENTHESIS","LEFT_WHITE_SQUARE_BRACKET","RIGHT_WHITE_SQUARE_BRACKET","LEFT_WHITE_CURLY_BRACKET","RIGHT_WHITE_CURLY_BRACKET","WHITE_DOT","encodeAllNestedBracketsAndDots","state","char","isInsideSingleQuoteString","parenthesesCount","squareBracketsCount","curlyBracketsCount","decodeEncodedBracketsAndDots","SPACE","HORIZONTAL_SPACE","DOT","METHOD_STEP","CLOSURE_STEP","WORD_STEP","GREMLIN_STEP","STEP_CONNECTOR","GREMLIN_QUERY","gremlinQueryRegExp","RegExp","encodedCode","gremlinQueries","match","parseToSyntaxTrees","parseNonGremlinCodeToSyntaxTree","tokenizeOnTopLevelPunctuation","query","squareBracketCount","curlyBracketCount","forEach","fromCharCode","filter","token","tokenizeOnTopLevelComma","tokenizeOnTopLevelParentheses","tokenizeOnTopLevelCurlyBrackets","isWrappedInParentheses","charAt","isWrappedInCurlyBrackets","isString","substr","isMethodInvocation","isClosureInvocation","trimParentheses","expression","trimCurlyBrackets","getMethodTokenAndArgumentTokensFromMethodInvocation","tokens","methodToken","argumentTokens","getIndentation","findIndex","getMethodTokenAndClosureCodeBlockFromClosureInvocation","fullQuery","closureCodeBlockToken","initialClosureCodeBlockIndentation","indexOf","trimStart","parseCodeBlockToSyntaxTree","fullCode","shouldCalculateInitialHorizontalPosition","codeBlock","_b","queries","extractGremlinQueries_1","indexOfQuery","remainingCode","nonGremlinCode","recreateQueryStringFromFormattedSyntaxTrees","recreateQueryStringFromFormattedSyntaxTree","stepGroup","args","withIndentationIfNotEmpty","indentation","lineIsEmpty","every","removeIndentationFromEmptyLines","globalIndentation","formatQuery","withDefaults","getInternalGremlintConfig","internalConfig","parseToSyntaxTrees_1","formatSyntaxTrees_1","recreateQueryStringFromFormattedSyntaxTrees_1","enumerable","get","formatQuery_1","appendToMap","propName","items","set","push","debounce","ms","timeoutId","clearTimeout","setTimeout","isConnected","maybeElement","cleanupElements","key","keys","stencilSubscription","getRenderingRef","elmsToUpdate","Map","dispose","clear","elm","elements","forceUpdate","reset","elms","unwrap","val","createObservableMap","defaultState","shouldUpdate","unwrappedState","states","entries","handlers","cb","oldValue","Proxy","[object Object]","_","configurable","has","on","eventName","callback","removeFromArray","onChange","unSet","newValue","unReset","use","subscriptions","unsubs","subscription","unsub","item","createStore","queryMode","isCustomQuery","isFetchedData","showMeta","isLoading","isError","canEdit","hostUrl","selectedNodeName","limit","page","total","order","updateId","changesMade","deleteId","insertNodeLabel","insertProperties","queryHistory","saveTitle","nodes","columnHeaders","savedColumnHeaders","availableNodes","queryParameter","errorMessage","editorTextFlag","viewQuery","stateQuery","viewParameter","stateParameter","timeTaken","refreshData","async","fetchData","Set","row","values","k","add","dataType","undefined","alias","title","transactionToAdd","update","changes","doc","toString","insert","dispatch","getParamsForBuilder","read","offset","delete","label","properties","getQueryPreview","res","axios","post","data","error","_c","response","nodeName","formatJSON","queryParameters","transactionToAddQuery","transactionToAddParameter"],"mappings":"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","sourcesContent":["\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TokenType = void 0;\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"NonGremlinCode\"] = \"NON_GREMLIN_CODE\";\n    TokenType[\"Traversal\"] = \"TRAVERSAL\";\n    TokenType[\"Method\"] = \"METHOD\";\n    TokenType[\"Closure\"] = \"CLOSURE\";\n    TokenType[\"String\"] = \"STRING\";\n    TokenType[\"Word\"] = \"WORD\";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.choose = exports.count = exports.sum = exports.neq = exports.eq = exports.spaces = exports.pipe = exports.last = void 0;\nvar last = function (array) { return array.slice(-1)[0]; };\nexports.last = last;\nvar pipe = function () {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return function (value) { return fns.reduce(function (value, fn) { return fn(value); }, value); };\n};\nexports.pipe = pipe;\nvar spaces = function (numberOfSpaces) { return Array(numberOfSpaces + 1).join(' '); };\nexports.spaces = spaces;\nvar eq = function (a) { return function (b) { return a === b; }; };\nexports.eq = eq;\nvar neq = function (a) { return function (b) { return a !== b; }; };\nexports.neq = neq;\nvar sum = function (a, b) { return a + b; };\nexports.sum = sum;\nvar count = function (array) { var _a; return (_a = array === null || array === void 0 ? void 0 : array.length) !== null && _a !== void 0 ? _a : 0; };\nexports.count = count;\nvar choose = function (getCondition, getThen, getElse) { return function () {\n    var params = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        params[_i] = arguments[_i];\n    }\n    return getCondition.apply(void 0, params) ? getThen.apply(void 0, params) : getElse.apply(void 0, params);\n}; };\nexports.choose = choose;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar recreateQueryOnelinerFromSyntaxTree = function (localIndentation) {\n    if (localIndentation === void 0) { localIndentation = 0; }\n    return function (syntaxTree) {\n        switch (syntaxTree.type) {\n            // This case will never occur\n            case types_1.TokenType.NonGremlinCode:\n                return syntaxTree.code;\n            case types_1.TokenType.Traversal:\n                return (0, utils_1.spaces)(localIndentation) + syntaxTree.steps.map(recreateQueryOnelinerFromSyntaxTree()).join('.');\n            case types_1.TokenType.Method:\n                return ((0, utils_1.spaces)(localIndentation) +\n                    recreateQueryOnelinerFromSyntaxTree()(syntaxTree.method) +\n                    '(' +\n                    syntaxTree.arguments.map(recreateQueryOnelinerFromSyntaxTree()).join(', ') +\n                    ')');\n            case types_1.TokenType.Closure:\n                return ((0, utils_1.spaces)(localIndentation) +\n                    recreateQueryOnelinerFromSyntaxTree()(syntaxTree.method) +\n                    '{' +\n                    (0, utils_1.last)(syntaxTree.closureCodeBlock.map(function (_a) {\n                        var lineOfCode = _a.lineOfCode, relativeIndentation = _a.relativeIndentation;\n                        return \"\".concat((0, utils_1.spaces)(Math.max(relativeIndentation, 0))).concat(lineOfCode);\n                    })) +\n                    '}');\n            case types_1.TokenType.String:\n                return (0, utils_1.spaces)(localIndentation) + syntaxTree.string;\n            case types_1.TokenType.Word:\n                return (0, utils_1.spaces)(localIndentation) + syntaxTree.word;\n        }\n    };\n};\nexports.default = recreateQueryOnelinerFromSyntaxTree;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.withIncreasedHorizontalPosition = exports.withHorizontalPosition = exports.withNoEndDotInfo = exports.withZeroDotInfo = exports.withDotInfo = exports.withIncreasedIndentation = exports.withZeroIndentation = exports.withIndentation = void 0;\nvar withIndentation = function (localIndentation) { return function (config) { return (__assign(__assign({}, config), { localIndentation: localIndentation })); }; };\nexports.withIndentation = withIndentation;\nexports.withZeroIndentation = (0, exports.withIndentation)(0);\nvar withIncreasedIndentation = function (indentationIncrease) { return function (config) { return (__assign(__assign({}, config), { localIndentation: config.localIndentation + indentationIncrease })); }; };\nexports.withIncreasedIndentation = withIncreasedIndentation;\nvar withDotInfo = function (_a) {\n    var shouldStartWithDot = _a.shouldStartWithDot, shouldEndWithDot = _a.shouldEndWithDot;\n    return function (config) { return (__assign(__assign({}, config), { shouldStartWithDot: shouldStartWithDot, shouldEndWithDot: shouldEndWithDot })); };\n};\nexports.withDotInfo = withDotInfo;\nvar withZeroDotInfo = function (config) { return (__assign(__assign({}, config), { shouldStartWithDot: false, shouldEndWithDot: false })); };\nexports.withZeroDotInfo = withZeroDotInfo;\nvar withNoEndDotInfo = function (config) { return (__assign(__assign({}, config), { shouldEndWithDot: false })); };\nexports.withNoEndDotInfo = withNoEndDotInfo;\nvar withHorizontalPosition = function (horizontalPosition) { return function (config) { return (__assign(__assign({}, config), { horizontalPosition: horizontalPosition })); }; };\nexports.withHorizontalPosition = withHorizontalPosition;\nvar withIncreasedHorizontalPosition = function (horizontalPositionIncrease) { return function (config) { return (__assign(__assign({}, config), { horizontalPosition: config.horizontalPosition + horizontalPositionIncrease })); }; };\nexports.withIncreasedHorizontalPosition = withIncreasedHorizontalPosition;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatClosure = void 0;\nvar recreateQueryOnelinerFromSyntaxTree_1 = require(\"../recreateQueryOnelinerFromSyntaxTree\");\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"./utils\");\nvar getClosureLineOfCodeIndentation = function (relativeIndentation, horizontalPosition, methodWidth, lineNumber) {\n    if (lineNumber === 0)\n        return Math.max(relativeIndentation, 0);\n    return Math.max(relativeIndentation + horizontalPosition + methodWidth + 1, 0);\n};\nvar getFormattedClosureLineOfCode = function (horizontalPosition, methodWidth) { return function (_a, lineNumber) {\n    var lineOfCode = _a.lineOfCode, relativeIndentation = _a.relativeIndentation;\n    return ({\n        lineOfCode: lineOfCode,\n        relativeIndentation: relativeIndentation,\n        localIndentation: getClosureLineOfCodeIndentation(relativeIndentation, horizontalPosition, methodWidth, lineNumber),\n    });\n}; };\nvar getFormattedClosureCodeBlock = function (unformattedClosureCodeBlock, horizontalPosition, methodWidth) {\n    return unformattedClosureCodeBlock.map(getFormattedClosureLineOfCode(horizontalPosition, methodWidth));\n};\nvar formatClosure = function (formatSyntaxTree) { return function (config) { return function (syntaxTree) {\n    var unformattedClosureCodeBlock = syntaxTree.closureCodeBlock, unformattedMethod = syntaxTree.method;\n    var localIndentation = config.localIndentation, horizontalPosition = config.horizontalPosition, maxLineLength = config.maxLineLength, shouldEndWithDot = config.shouldEndWithDot;\n    var recreatedQuery = (0, recreateQueryOnelinerFromSyntaxTree_1.default)(localIndentation)(syntaxTree);\n    var formattedMethod = formatSyntaxTree((0, utils_1.withNoEndDotInfo)(config))(unformattedMethod);\n    var methodWidth = formattedMethod.width;\n    if (recreatedQuery.length <= maxLineLength) {\n        return {\n            type: types_1.TokenType.Closure,\n            method: formattedMethod,\n            closureCodeBlock: getFormattedClosureCodeBlock(unformattedClosureCodeBlock, horizontalPosition, methodWidth),\n            localIndentation: localIndentation,\n            width: recreatedQuery.trim().length,\n            shouldStartWithDot: false,\n            shouldEndWithDot: Boolean(shouldEndWithDot),\n        };\n    }\n    return {\n        type: types_1.TokenType.Closure,\n        method: formattedMethod,\n        closureCodeBlock: getFormattedClosureCodeBlock(unformattedClosureCodeBlock, horizontalPosition, methodWidth),\n        localIndentation: 0,\n        width: 0,\n        shouldStartWithDot: false,\n        shouldEndWithDot: Boolean(shouldEndWithDot),\n    };\n}; }; };\nexports.formatClosure = formatClosure;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatMethod = void 0;\nvar recreateQueryOnelinerFromSyntaxTree_1 = require(\"../recreateQueryOnelinerFromSyntaxTree\");\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"../utils\");\nvar utils_2 = require(\"./utils\");\n// Groups arguments into argument groups an adds a localIndentation property\nvar formatMethod = function (formatSyntaxTree) { return function (config) { return function (syntaxTree) {\n    var recreatedQuery = (0, recreateQueryOnelinerFromSyntaxTree_1.default)(config.localIndentation)(syntaxTree);\n    var method = formatSyntaxTree((0, utils_2.withNoEndDotInfo)(config))(syntaxTree.method);\n    var argumentsWillNotBeWrapped = recreatedQuery.length <= config.maxLineLength;\n    if (argumentsWillNotBeWrapped) {\n        return {\n            type: types_1.TokenType.Method,\n            method: method,\n            // The arguments property is here so that the resulted syntax tree can\n            // still be understood by recreateQueryOnelinerFromSyntaxTree\n            arguments: syntaxTree.arguments,\n            argumentGroups: [\n                syntaxTree.arguments.reduce(function (argumentGroup, syntaxTree) {\n                    return __spreadArray(__spreadArray([], argumentGroup, true), [\n                        formatSyntaxTree(\n                        // Since the method's arguments will be on the same line, their horizontal position is increased by the\n                        // method's width plus the width of the opening parenthesis\n                        (0, utils_1.pipe)(utils_2.withZeroIndentation, utils_2.withZeroDotInfo, (0, utils_2.withIncreasedHorizontalPosition)(method.width + 1 + argumentGroup.map(function (_a) {\n                            var width = _a.width;\n                            return width;\n                        }).reduce(utils_1.sum, 0) + argumentGroup.length))(config))(syntaxTree),\n                    ], false);\n                }, []),\n            ],\n            argumentsShouldStartOnNewLine: false,\n            localIndentation: config.localIndentation,\n            shouldStartWithDot: false,\n            shouldEndWithDot: Boolean(config.shouldEndWithDot),\n            width: recreatedQuery.trim().length,\n        };\n    }\n    // shouldEndWithDot has to reside on the method object, so the end dot can be\n    // placed after the method parentheses. shouldStartWithDot has to be passed on\n    // further down so the start dot can be placed after the indentation.\n    var argumentGroups = syntaxTree.arguments.map(function (step) { return [\n        formatSyntaxTree((0, utils_1.pipe)((0, utils_2.withIncreasedIndentation)(2), utils_2.withZeroDotInfo, (0, utils_2.withHorizontalPosition)(config.localIndentation + 2))(config))(step),\n    ]; });\n    var lastArgumentGroup = (0, utils_1.last)(argumentGroups);\n    // Add the width of the last line of parameters, the dots between them and the indentation of the parameters\n    var width = lastArgumentGroup\n        ? lastArgumentGroup.map(function (_a) {\n            var width = _a.width;\n            return width;\n        }).reduce(utils_1.sum, 0) + lastArgumentGroup.length - 1\n        : 0;\n    return {\n        type: types_1.TokenType.Method,\n        method: method,\n        arguments: syntaxTree.arguments,\n        argumentGroups: argumentGroups,\n        argumentsShouldStartOnNewLine: true,\n        shouldStartWithDot: false,\n        shouldEndWithDot: Boolean(config.shouldEndWithDot),\n        localIndentation: 0,\n        width: width,\n    };\n}; }; };\nexports.formatMethod = formatMethod;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatNonGremlin = void 0;\nvar utils_1 = require(\"../utils\");\nvar formatNonGremlin = function (_config) { return function (syntaxTree) {\n    return __assign(__assign({}, syntaxTree), { width: (0, utils_1.count)((0, utils_1.last)(syntaxTree.code.split('\\n'))) });\n}; };\nexports.formatNonGremlin = formatNonGremlin;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatString = void 0;\nvar types_1 = require(\"../types\");\nvar formatString = function (config) { return function (syntaxTree) {\n    return {\n        type: types_1.TokenType.String,\n        string: syntaxTree.string,\n        localIndentation: config.localIndentation,\n        width: syntaxTree.string.length + 2,\n    };\n}; };\nexports.formatString = formatString;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STEP_MODULATORS = void 0;\nexports.STEP_MODULATORS = [\n    'as',\n    'as_',\n    'by',\n    'emit',\n    'option',\n    'from',\n    'from_',\n    'to',\n    'read',\n    'times',\n    'until',\n    'with',\n    'with_',\n    'write',\n];\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.shouldStepBeLastStepInStepGroup = exports.isStepFirstStepInStepGroup = exports.isModulator = exports.isTraversalSource = void 0;\nvar types_1 = require(\"../../../types\");\nvar consts_1 = require(\"../../../consts\");\nvar recreateQueryOnelinerFromSyntaxTree_1 = require(\"../../../recreateQueryOnelinerFromSyntaxTree\");\nvar isTraversalSource = function (step) {\n    return step.type === types_1.TokenType.Word && step.word === 'g';\n};\nexports.isTraversalSource = isTraversalSource;\nvar isModulator = function (step) {\n    if (step.type !== types_1.TokenType.Method && step.type !== types_1.TokenType.Closure)\n        return false;\n    if (step.method.type !== types_1.TokenType.Word)\n        return false;\n    return consts_1.STEP_MODULATORS.includes(step.method.word);\n};\nexports.isModulator = isModulator;\nvar isStepFirstStepInStepGroup = function (_a) {\n    var stepsInStepGroup = _a.stepsInStepGroup;\n    return !stepsInStepGroup.length;\n};\nexports.isStepFirstStepInStepGroup = isStepFirstStepInStepGroup;\nvar isLineTooLongWithSubsequentModulators = function (config) { return function (_a, step, index, steps) {\n    var stepsInStepGroup = _a.stepsInStepGroup, stepGroups = _a.stepGroups;\n    var stepsWithSubsequentModulators = steps.slice(index + 1).reduce(function (aggregator, step) {\n        var stepsInStepGroup = aggregator.stepsInStepGroup, hasReachedFinalModulator = aggregator.hasReachedFinalModulator;\n        if (hasReachedFinalModulator)\n            return aggregator;\n        if ((0, exports.isModulator)(step)) {\n            return __assign(__assign({}, aggregator), { stepsInStepGroup: __spreadArray(__spreadArray([], stepsInStepGroup, true), [step], false) });\n        }\n        return __assign(__assign({}, aggregator), { hasReachedFinalModulator: true });\n    }, {\n        stepsInStepGroup: __spreadArray(__spreadArray([], stepsInStepGroup, true), [step], false),\n        hasReachedFinalModulator: false,\n    }).stepsInStepGroup;\n    var stepGroupIndentationIncrease = (function () {\n        var traversalSourceIndentationIncrease = stepGroups[0] && (0, exports.isTraversalSource)(stepGroups[0].steps[0]) ? 2 : 0;\n        var modulatorIndentationIncrease = (0, exports.isModulator)(__spreadArray(__spreadArray([], stepsInStepGroup, true), [step], false)[0]) ? 2 : 0;\n        var indentationIncrease = traversalSourceIndentationIncrease + modulatorIndentationIncrease;\n        return indentationIncrease;\n    })();\n    var recreatedQueryWithSubsequentModulators = (0, recreateQueryOnelinerFromSyntaxTree_1.default)(config.localIndentation + stepGroupIndentationIncrease)({\n        type: types_1.TokenType.Traversal,\n        steps: stepsWithSubsequentModulators,\n    });\n    var lineIsTooLongWithSubsequentModulators = recreatedQueryWithSubsequentModulators.length > config.maxLineLength;\n    return lineIsTooLongWithSubsequentModulators;\n}; };\n// If the first step in a group is a modulator, then it must also be the last step in the group\nvar shouldStepBeLastStepInStepGroup = function (config) { return function (_a, step, index, steps) {\n    var stepsInStepGroup = _a.stepsInStepGroup, stepGroups = _a.stepGroups;\n    var isFirstStepInStepGroup = !stepsInStepGroup.length;\n    var isLastStep = index === steps.length - 1;\n    var nextStepIsModulator = !isLastStep && (0, exports.isModulator)(steps[index + 1]);\n    var lineIsTooLongWithSubsequentModulators = isLineTooLongWithSubsequentModulators(config)({ stepsInStepGroup: stepsInStepGroup, stepGroups: stepGroups }, step, index, steps);\n    // If the first step in a group is a modulator, then it must also be the last step in the group\n    var stepShouldBeLastStepInStepGroup = isLastStep ||\n        (isFirstStepInStepGroup && (0, exports.isModulator)(step)) ||\n        ((step.type === types_1.TokenType.Method || step.type === types_1.TokenType.Closure) &&\n            !(nextStepIsModulator && !lineIsTooLongWithSubsequentModulators));\n    return stepShouldBeLastStepInStepGroup;\n}; };\nexports.shouldStepBeLastStepInStepGroup = shouldStepBeLastStepInStepGroup;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar utils_2 = require(\"../../utils\");\nvar utils_3 = require(\"./utils\");\n// If it should be the last step in a line\n// We don't want to newline after words which are not methods. For\n// instance, g.V() should be one one line, as should __.as\nvar reduceSingleStepInStepGroup = function (formatSyntaxTree, config) { return function (_a, step, index, steps) {\n    var stepsInStepGroup = _a.stepsInStepGroup, stepGroups = _a.stepGroups;\n    var isFirstStepGroup = stepGroups.length === 0;\n    var isLastStepGroup = index === steps.length - 1;\n    var traversalSourceIndentationIncrease = stepGroups[0] && (0, utils_3.isTraversalSource)(stepGroups[0].steps[0]) ? 2 : 0;\n    var modulatorIndentationIncrease = (0, utils_3.isModulator)(step) ? 2 : 0;\n    var localIndentation = config.localIndentation + traversalSourceIndentationIncrease + modulatorIndentationIncrease;\n    // This is the only step in the step group, so it is the first step in\n    // the step group. It should only start with a dot if it is not the\n    // first stepGroup and config.shouldPlaceDotsAfterLineBreaks\n    var shouldStartWithDot = !isFirstStepGroup && config.shouldPlaceDotsAfterLineBreaks;\n    // It is the last step in a group and should only end with dot if not\n    // config.shouldPlaceDotsAfterLineBreaks this is not the last step in\n    // steps\n    var shouldEndWithDot = !isLastStepGroup && !config.shouldPlaceDotsAfterLineBreaks;\n    return {\n        stepsInStepGroup: [],\n        stepGroups: __spreadArray(__spreadArray([], stepGroups, true), [\n            {\n                steps: [\n                    formatSyntaxTree((0, utils_1.pipe)((0, utils_2.withIndentation)(localIndentation), (0, utils_2.withDotInfo)({ shouldStartWithDot: shouldStartWithDot, shouldEndWithDot: shouldEndWithDot }), (0, utils_2.withHorizontalPosition)(localIndentation + +config.shouldPlaceDotsAfterLineBreaks))(config))(step),\n                ],\n            },\n        ], false),\n    };\n}; };\nexports.default = reduceSingleStepInStepGroup;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar utils_2 = require(\"../../utils\");\n// If it should be the last step in a line\n// We don't want to newline after words which are not methods. For\n// instance, g.V() should be one one line, as should __.as\nvar reduceLastStepInStepGroup = function (formatSyntaxTree, config) { return function (_a, step, index, steps) {\n    var stepsInStepGroup = _a.stepsInStepGroup, stepGroups = _a.stepGroups;\n    var isLastStepGroup = index === steps.length - 1;\n    // If it is the last (and also not first) step in a group\n    // This is not the first step in the step group, so it should not\n    // start with a dot\n    var shouldStartWithDot = false;\n    var shouldEndWithDot = !isLastStepGroup && !config.shouldPlaceDotsAfterLineBreaks;\n    return {\n        stepsInStepGroup: [],\n        stepGroups: __spreadArray(__spreadArray([], stepGroups, true), [\n            {\n                steps: __spreadArray(__spreadArray([], stepsInStepGroup, true), [\n                    formatSyntaxTree((0, utils_1.pipe)(utils_2.withZeroIndentation, (0, utils_2.withDotInfo)({ shouldStartWithDot: shouldStartWithDot, shouldEndWithDot: shouldEndWithDot }), (0, utils_2.withIncreasedHorizontalPosition)(\n                    // If I recall correctly, the + stepsInStepGroup.length handles the horizontal increase caused by the dots joining the steps\n                    stepsInStepGroup.map(function (_a) {\n                        var width = _a.width;\n                        return width;\n                    }).reduce(utils_1.sum, 0) + stepsInStepGroup.length))(config))(step),\n                ], false),\n            },\n        ], false),\n    };\n}; };\nexports.default = reduceLastStepInStepGroup;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar utils_2 = require(\"../../utils\");\nvar utils_3 = require(\"./utils\");\n// If it is the first step in a group and also not the last one, format it\n// with indentation, otherwise, remove the indentation\nvar reduceFirstStepInStepGroup = function (formatSyntaxTree, config) { return function (_a, step) {\n    var stepsInStepGroup = _a.stepsInStepGroup, stepGroups = _a.stepGroups;\n    var localIndentation = config.localIndentation + (stepGroups[0] && (0, utils_3.isTraversalSource)(stepGroups[0].steps[0]) ? 2 : 0);\n    var isFirstStepGroup = stepGroups.length === 0;\n    // It is the first step in a group and should start with a dot if it is\n    // not the first stepGroup and config.shouldPlaceDotsAfterLineBreaks\n    var shouldStartWithDot = !isFirstStepGroup && config.shouldPlaceDotsAfterLineBreaks;\n    // It is the first step in a group, but not the last, so it should not\n    // end with a dot.\n    var shouldEndWithDot = false;\n    return {\n        stepsInStepGroup: [\n            formatSyntaxTree((0, utils_1.pipe)((0, utils_2.withIndentation)(localIndentation), (0, utils_2.withDotInfo)({ shouldStartWithDot: shouldStartWithDot, shouldEndWithDot: shouldEndWithDot }), (0, utils_2.withHorizontalPosition)(localIndentation))(config))(step),\n        ],\n        stepGroups: stepGroups,\n    };\n}; };\nexports.default = reduceFirstStepInStepGroup;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar utils_2 = require(\"../../utils\");\nvar reduceMiddleStepInStepGroup = function (formatSyntaxTree, config) { return function (_a, step) {\n    var stepsInStepGroup = _a.stepsInStepGroup, stepGroups = _a.stepGroups;\n    var horizontalPosition = config.localIndentation + stepsInStepGroup.map(function (_a) {\n        var width = _a.width;\n        return width;\n    }).reduce(utils_1.sum, 0) + stepsInStepGroup.length;\n    return {\n        stepsInStepGroup: __spreadArray(__spreadArray([], stepsInStepGroup, true), [\n            formatSyntaxTree((0, utils_1.pipe)(utils_2.withZeroIndentation, (0, utils_2.withDotInfo)({ shouldStartWithDot: false, shouldEndWithDot: false }), (0, utils_2.withHorizontalPosition)(horizontalPosition))(config))(step),\n        ], false),\n        stepGroups: stepGroups,\n    };\n}; };\nexports.default = reduceMiddleStepInStepGroup;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getStepGroups = void 0;\nvar reduceSingleStepInStepGroup_1 = require(\"./reduceSingleStepInStepGroup\");\nvar reduceLastStepInStepGroup_1 = require(\"./reduceLastStepInStepGroup\");\nvar reduceFirstStepInStepGroup_1 = require(\"./reduceFirstStepInStepGroup\");\nvar reduceMiddleStepInStepGroup_1 = require(\"./reduceMiddleStepInStepGroup\");\nvar utils_1 = require(\"./utils\");\nvar utils_2 = require(\"../../../utils\");\nvar getStepGroups = function (formatSyntaxTree, steps, config) {\n    return steps.reduce((0, utils_2.choose)((0, utils_1.shouldStepBeLastStepInStepGroup)(config), (0, utils_2.choose)(utils_1.isStepFirstStepInStepGroup, (0, reduceSingleStepInStepGroup_1.default)(formatSyntaxTree, config), (0, reduceLastStepInStepGroup_1.default)(formatSyntaxTree, config)), (0, utils_2.choose)(utils_1.isStepFirstStepInStepGroup, (0, reduceFirstStepInStepGroup_1.default)(formatSyntaxTree, config), (0, reduceMiddleStepInStepGroup_1.default)(formatSyntaxTree, config))), {\n        stepsInStepGroup: [],\n        stepGroups: [],\n    }).stepGroups;\n};\nexports.getStepGroups = getStepGroups;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatTraversal = void 0;\nvar recreateQueryOnelinerFromSyntaxTree_1 = require(\"../../recreateQueryOnelinerFromSyntaxTree\");\nvar types_1 = require(\"../../types\");\nvar utils_1 = require(\"../../utils\");\nvar utils_2 = require(\"../utils\");\nvar getStepGroups_1 = require(\"./getStepGroups\");\nvar utils_3 = require(\"./getStepGroups/utils\");\n// Groups steps into step groups and adds a localIndentation property\nvar formatTraversal = function (formatSyntaxTree) { return function (config) { return function (syntaxTree) {\n    var initialHorizontalPositionIndentationIncrease = syntaxTree.steps[0] && (0, utils_3.isTraversalSource)(syntaxTree.steps[0]) ? syntaxTree.initialHorizontalPosition : 0;\n    var recreatedQuery = (0, recreateQueryOnelinerFromSyntaxTree_1.default)(config.localIndentation + initialHorizontalPositionIndentationIncrease)(syntaxTree);\n    if (recreatedQuery.length <= config.maxLineLength) {\n        return {\n            type: types_1.TokenType.Traversal,\n            steps: syntaxTree.steps,\n            stepGroups: [\n                {\n                    steps: syntaxTree.steps.reduce(function (steps, step, stepIndex) {\n                        var formattedStep = stepIndex === 0\n                            ? formatSyntaxTree(config)(step)\n                            : // Since the traversal's steps will be on the same line, their horizontal position is increased by the\n                                // steps's width plus the width of the dots between them\n                                formatSyntaxTree((0, utils_1.pipe)(utils_2.withZeroIndentation, (0, utils_2.withIncreasedHorizontalPosition)(syntaxTree.initialHorizontalPosition +\n                                    steps.map(function (_a) {\n                                        var width = _a.width;\n                                        return width;\n                                    }).reduce(utils_1.sum, 0) +\n                                    steps.length))(config))(step);\n                        return __spreadArray(__spreadArray([], steps, true), [formattedStep], false);\n                    }, []),\n                },\n            ],\n            initialHorizontalPosition: syntaxTree.initialHorizontalPosition,\n            localIndentation: 0,\n            width: recreatedQuery.trim().length,\n        };\n    }\n    var stepGroups = (0, getStepGroups_1.getStepGroups)(formatSyntaxTree, syntaxTree.steps, config);\n    var lastStepGroup = (0, utils_1.last)(stepGroups);\n    var width = lastStepGroup\n        ? lastStepGroup.steps.map(function (_a) {\n            var width = _a.width;\n            return width;\n        }).reduce(utils_1.sum, 0) + stepGroups.length - 1\n        : 0;\n    return {\n        type: types_1.TokenType.Traversal,\n        steps: syntaxTree.steps,\n        stepGroups: stepGroups,\n        initialHorizontalPosition: syntaxTree.initialHorizontalPosition,\n        localIndentation: 0,\n        width: width,\n    };\n}; }; };\nexports.formatTraversal = formatTraversal;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatWord = void 0;\nvar types_1 = require(\"../types\");\nvar formatWord = function (config) { return function (syntaxTree) {\n    return {\n        type: types_1.TokenType.Word,\n        word: syntaxTree.word,\n        localIndentation: config.localIndentation,\n        shouldStartWithDot: Boolean(config.shouldStartWithDot),\n        shouldEndWithDot: Boolean(config.shouldEndWithDot),\n        width: syntaxTree.word.length,\n    };\n}; };\nexports.formatWord = formatWord;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatSyntaxTrees = void 0;\nvar types_1 = require(\"../types\");\nvar formatClosure_1 = require(\"./formatClosure\");\nvar formatMethod_1 = require(\"./formatMethod\");\nvar formatNonGremlin_1 = require(\"./formatNonGremlin\");\nvar formatString_1 = require(\"./formatString\");\nvar formatTraversal_1 = require(\"./formatTraversal\");\nvar formatWord_1 = require(\"./formatWord\");\nvar formatSyntaxTree = function (config) { return function (syntaxTree) {\n    switch (syntaxTree.type) {\n        case types_1.TokenType.NonGremlinCode:\n            return (0, formatNonGremlin_1.formatNonGremlin)(config)(syntaxTree);\n        case types_1.TokenType.Traversal:\n            return (0, formatTraversal_1.formatTraversal)(formatSyntaxTree)(config)(syntaxTree);\n        case types_1.TokenType.Method:\n            return (0, formatMethod_1.formatMethod)(formatSyntaxTree)(config)(syntaxTree);\n        case types_1.TokenType.Closure:\n            return (0, formatClosure_1.formatClosure)(formatSyntaxTree)(config)(syntaxTree);\n        case types_1.TokenType.String:\n            return (0, formatString_1.formatString)(config)(syntaxTree);\n        case types_1.TokenType.Word:\n            return (0, formatWord_1.formatWord)(config)(syntaxTree);\n    }\n}; };\nvar formatSyntaxTrees = function (config) { return function (syntaxTrees) {\n    return syntaxTrees.map(formatSyntaxTree(config));\n}; };\nexports.formatSyntaxTrees = formatSyntaxTrees;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractGremlinQueries = void 0;\nvar LEFT_WHITE_PARENTHESIS = '⦅';\nvar RIGHT_WHITE_PARENTHESIS = '⦆';\nvar LEFT_WHITE_SQUARE_BRACKET = '⟦';\nvar RIGHT_WHITE_SQUARE_BRACKET = '⟧';\nvar LEFT_WHITE_CURLY_BRACKET = '⦃';\nvar RIGHT_WHITE_CURLY_BRACKET = '⦄';\nvar WHITE_DOT = '。';\nvar encodeAllNestedBracketsAndDots = function (code) {\n    var word = code.split('').reduce(function (state, char) {\n        if (char === '.') {\n            return __assign(__assign({}, state), { word: !state.isInsideSingleQuoteString &&\n                    !state.parenthesesCount &&\n                    !state.squareBracketsCount &&\n                    !state.curlyBracketsCount\n                    ? state.word + '.'\n                    : state.word + WHITE_DOT });\n        }\n        if (char === '(') {\n            return __assign(__assign({}, state), { parenthesesCount: state.parenthesesCount + (state.isInsideSingleQuoteString ? 0 : 1), word: !state.isInsideSingleQuoteString &&\n                    !state.parenthesesCount &&\n                    !state.squareBracketsCount &&\n                    !state.curlyBracketsCount\n                    ? state.word + '('\n                    : state.word + LEFT_WHITE_PARENTHESIS });\n        }\n        if (char === '[') {\n            return __assign(__assign({}, state), { squareBracketsCount: state.squareBracketsCount + (state.isInsideSingleQuoteString ? 0 : 1), word: !state.isInsideSingleQuoteString &&\n                    !state.parenthesesCount &&\n                    !state.squareBracketsCount &&\n                    !state.curlyBracketsCount\n                    ? state.word + '['\n                    : state.word + LEFT_WHITE_SQUARE_BRACKET });\n        }\n        if (char === '{') {\n            return __assign(__assign({}, state), { curlyBracketsCount: state.curlyBracketsCount + (state.isInsideSingleQuoteString ? 0 : 1), word: !state.isInsideSingleQuoteString &&\n                    !state.parenthesesCount &&\n                    !state.squareBracketsCount &&\n                    !state.curlyBracketsCount\n                    ? state.word + '{'\n                    : state.word + LEFT_WHITE_CURLY_BRACKET });\n        }\n        if (char === ')') {\n            return __assign(__assign({}, state), { parenthesesCount: state.parenthesesCount - (state.isInsideSingleQuoteString ? 0 : 1), word: !state.isInsideSingleQuoteString &&\n                    state.parenthesesCount === 1 &&\n                    !state.squareBracketsCount &&\n                    !state.curlyBracketsCount\n                    ? state.word + ')'\n                    : state.word + RIGHT_WHITE_PARENTHESIS });\n        }\n        if (char === ']') {\n            return __assign(__assign({}, state), { squareBracketsCount: state.squareBracketsCount - (state.isInsideSingleQuoteString ? 0 : 1), word: !state.isInsideSingleQuoteString &&\n                    !state.parenthesesCount &&\n                    state.squareBracketsCount === 1 &&\n                    !state.curlyBracketsCount\n                    ? state.word + ']'\n                    : state.word + RIGHT_WHITE_SQUARE_BRACKET });\n        }\n        if (char === '}') {\n            return __assign(__assign({}, state), { curlyBracketsCount: state.curlyBracketsCount - (state.isInsideSingleQuoteString ? 0 : 1), word: !state.isInsideSingleQuoteString &&\n                    !state.parenthesesCount &&\n                    !state.squareBracketsCount &&\n                    state.curlyBracketsCount === 1\n                    ? state.word + '}'\n                    : state.word + RIGHT_WHITE_CURLY_BRACKET });\n        }\n        if (char === \"'\") {\n            return __assign(__assign({}, state), { isInsideSingleQuoteString: !state.isInsideSingleQuoteString, word: state.word + \"'\" });\n        }\n        return __assign(__assign({}, state), { word: state.word + char });\n    }, { word: '', parenthesesCount: 0, squareBracketsCount: 0, curlyBracketsCount: 0, isInsideSingleQuoteString: false }).word;\n    return word;\n};\nvar decodeEncodedBracketsAndDots = function (code) {\n    return code\n        .split(WHITE_DOT)\n        .join('.')\n        .split(LEFT_WHITE_PARENTHESIS)\n        .join('(')\n        .split(RIGHT_WHITE_PARENTHESIS)\n        .join(')')\n        .split(LEFT_WHITE_SQUARE_BRACKET)\n        .join('[')\n        .split(RIGHT_WHITE_SQUARE_BRACKET)\n        .join(']')\n        .split(LEFT_WHITE_CURLY_BRACKET)\n        .join('{')\n        .split(RIGHT_WHITE_CURLY_BRACKET)\n        .join('}');\n};\nvar SPACE = \"\\\\s\";\nvar HORIZONTAL_SPACE = \"[^\\\\S\\\\r\\\\n]\";\nvar DOT = \"\\\\.\";\nvar METHOD_STEP = \"\\\\w+\".concat(HORIZONTAL_SPACE, \"*\\\\([^\\\\)]*\\\\)\");\nvar CLOSURE_STEP = \"\\\\w+\".concat(HORIZONTAL_SPACE, \"*\\\\{[^\\\\}]*\\\\}\");\nvar WORD_STEP = \"\\\\w+\";\nvar GREMLIN_STEP = \"(\".concat(METHOD_STEP, \"|\").concat(CLOSURE_STEP, \"|\").concat(WORD_STEP, \")\");\nvar STEP_CONNECTOR = \"(\".concat(SPACE, \"*\").concat(DOT).concat(SPACE, \"*)\");\nvar GREMLIN_QUERY = \"g(\".concat(STEP_CONNECTOR).concat(GREMLIN_STEP, \")+\");\nvar gremlinQueryRegExp = new RegExp(GREMLIN_QUERY, 'g');\nvar extractGremlinQueries = function (code) {\n    var encodedCode = encodeAllNestedBracketsAndDots(code);\n    var gremlinQueries = encodedCode.match(gremlinQueryRegExp);\n    if (!gremlinQueries)\n        return [];\n    return gremlinQueries.map(decodeEncodedBracketsAndDots);\n};\nexports.extractGremlinQueries = extractGremlinQueries;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseToSyntaxTrees = exports.parseNonGremlinCodeToSyntaxTree = void 0;\nvar types_1 = require(\"../types\");\nvar utils_1 = require(\"../utils\");\nvar extractGremlinQueries_1 = require(\"./extractGremlinQueries\");\nvar tokenizeOnTopLevelPunctuation = function (query) {\n    var word = '';\n    var parenthesesCount = 0;\n    var squareBracketCount = 0;\n    var curlyBracketCount = 0;\n    var isInsideSingleQuoteString = false;\n    query.split('').forEach(function (char) {\n        if (char === '(' && !isInsideSingleQuoteString) {\n            parenthesesCount++;\n            word += '(';\n            return;\n        }\n        if (char === '[' && !isInsideSingleQuoteString) {\n            squareBracketCount++;\n            word += '[';\n            return;\n        }\n        if (char === '{' && !isInsideSingleQuoteString) {\n            curlyBracketCount++;\n            word += '{';\n            return;\n        }\n        if (char === ')' && !isInsideSingleQuoteString) {\n            parenthesesCount--;\n            word += ')';\n            return;\n        }\n        if (char === ']' && !isInsideSingleQuoteString) {\n            squareBracketCount--;\n            word += ']';\n            return;\n        }\n        if (char === '}' && !isInsideSingleQuoteString) {\n            curlyBracketCount--;\n            word += '}';\n            return;\n        }\n        if (char === \"'\") {\n            isInsideSingleQuoteString = !isInsideSingleQuoteString;\n            word += \"'\";\n            return;\n        }\n        if (char === '.') {\n            word +=\n                isInsideSingleQuoteString || parenthesesCount || squareBracketCount || curlyBracketCount\n                    ? '.'\n                    : String.fromCharCode(28);\n            return;\n        }\n        word += char;\n    });\n    return word\n        .split(String.fromCharCode(28))\n        .filter(function (token) { return token !== ''; })\n        .map(function (token) { return token.trim(); });\n};\nvar tokenizeOnTopLevelComma = function (query) {\n    var word = '';\n    var parenthesesCount = 0;\n    var squareBracketsCount = 0;\n    var curlyBracketsCount = 0;\n    var isInsideSingleQuoteString = false;\n    query.split('').forEach(function (char) {\n        if (char === '(' && !isInsideSingleQuoteString) {\n            parenthesesCount++;\n            word += '(';\n            return;\n        }\n        if (char === '[' && !isInsideSingleQuoteString) {\n            squareBracketsCount++;\n            word += '[';\n            return;\n        }\n        if (char === '{' && !isInsideSingleQuoteString) {\n            curlyBracketsCount++;\n            word += '{';\n            return;\n        }\n        if (char === ')' && !isInsideSingleQuoteString) {\n            parenthesesCount--;\n            word += ')';\n            return;\n        }\n        if (char === ']' && !isInsideSingleQuoteString) {\n            squareBracketsCount--;\n            word += ']';\n            return;\n        }\n        if (char === '}' && !isInsideSingleQuoteString) {\n            curlyBracketsCount--;\n            word += '}';\n            return;\n        }\n        if (char === \"'\") {\n            isInsideSingleQuoteString = !isInsideSingleQuoteString;\n            word += \"'\";\n            return;\n        }\n        if (char === ',') {\n            word +=\n                isInsideSingleQuoteString || parenthesesCount || squareBracketsCount || curlyBracketsCount\n                    ? ','\n                    : String.fromCharCode(28);\n            return;\n        }\n        word += char;\n    });\n    return word\n        .split(String.fromCharCode(28))\n        .filter(function (token) { return token !== ''; })\n        .map(function (token) { return token.trim(); });\n};\nvar tokenizeOnTopLevelParentheses = function (query) {\n    var word = '';\n    var parenthesesCount = 0;\n    var squareBracketsCount = 0;\n    var curlyBracketsCount = 0;\n    var isInsideSingleQuoteString = false;\n    query.split('').forEach(function (char) {\n        if (char === '(' && !isInsideSingleQuoteString) {\n            if (parenthesesCount === 0) {\n                word += String.fromCharCode(28);\n            }\n            parenthesesCount++;\n            word += '(';\n            return;\n        }\n        if (char === '[' && !isInsideSingleQuoteString) {\n            squareBracketsCount++;\n            word += '[';\n            return;\n        }\n        if (char === '{' && !isInsideSingleQuoteString) {\n            curlyBracketsCount++;\n            word += '{';\n            return;\n        }\n        if (char === ')' && !isInsideSingleQuoteString) {\n            parenthesesCount--;\n            word += ')';\n            return;\n        }\n        if (char === ']' && !isInsideSingleQuoteString) {\n            squareBracketsCount--;\n            word += ']';\n            return;\n        }\n        if (char === '}' && !isInsideSingleQuoteString) {\n            curlyBracketsCount--;\n            word += '}';\n            return;\n        }\n        if (char === \"'\") {\n            isInsideSingleQuoteString = !isInsideSingleQuoteString;\n            word += \"'\";\n            return;\n        }\n        word += char;\n    });\n    return word\n        .split(String.fromCharCode(28))\n        .filter(function (token) { return token !== ''; })\n        .map(function (token) { return token.trim(); });\n};\nvar tokenizeOnTopLevelCurlyBrackets = function (query) {\n    var word = '';\n    var parenthesesCount = 0;\n    var squareBracketsCount = 0;\n    var curlyBracketsCount = 0;\n    var isInsideSingleQuoteString = false;\n    query.split('').forEach(function (char) {\n        if (char === '(' && !isInsideSingleQuoteString) {\n            parenthesesCount++;\n            word += '(';\n            return;\n        }\n        if (char === '[' && !isInsideSingleQuoteString) {\n            squareBracketsCount++;\n            word += '[';\n            return;\n        }\n        if (char === '{' && !isInsideSingleQuoteString) {\n            if (curlyBracketsCount === 0) {\n                word += String.fromCharCode(28);\n            }\n            curlyBracketsCount++;\n            word += '{';\n            return;\n        }\n        if (char === ')' && !isInsideSingleQuoteString) {\n            parenthesesCount--;\n            word += ')';\n            return;\n        }\n        if (char === ']' && !isInsideSingleQuoteString) {\n            squareBracketsCount--;\n            word += ']';\n            return;\n        }\n        if (char === '}' && !isInsideSingleQuoteString) {\n            curlyBracketsCount--;\n            word += '}';\n            return;\n        }\n        if (char === \"'\") {\n            isInsideSingleQuoteString = !isInsideSingleQuoteString;\n            word += \"'\";\n            return;\n        }\n        word += char;\n    });\n    return word\n        .split(String.fromCharCode(28))\n        .filter(function (token) { return token !== ''; })\n        .map(function (token) { return token.trim(); });\n};\nvar isWrappedInParentheses = function (token) {\n    if (token.length < 2)\n        return false;\n    if (token.charAt(0) !== '(')\n        return false;\n    if (token.slice(-1) !== ')')\n        return false;\n    return true;\n};\nvar isWrappedInCurlyBrackets = function (token) {\n    if (token.length < 2)\n        return false;\n    if (token.charAt(0) !== '{')\n        return false;\n    if (token.slice(-1) !== '}')\n        return false;\n    return true;\n};\nvar isString = function (token) {\n    if (token.length < 2)\n        return false;\n    if (token.charAt(0) !== token.substr(-1))\n        return false;\n    if (['\"', \"'\"].includes(token.charAt(0)))\n        return true;\n    return false;\n};\nvar isMethodInvocation = function (token) {\n    return (0, utils_1.pipe)(tokenizeOnTopLevelParentheses, utils_1.last, isWrappedInParentheses)(token);\n};\nvar isClosureInvocation = function (token) {\n    return (0, utils_1.pipe)(tokenizeOnTopLevelCurlyBrackets, utils_1.last, isWrappedInCurlyBrackets)(token);\n};\nvar trimParentheses = function (expression) { return expression.slice(1, -1); };\nvar trimCurlyBrackets = function (expression) { return expression.slice(1, -1); };\nvar getMethodTokenAndArgumentTokensFromMethodInvocation = function (token) {\n    // The word before the first parenthesis is the method name\n    // The token may be a double application of a curried function, so we cannot\n    // assume that the first opening parenthesis is closed by the last closing\n    // parenthesis\n    var tokens = tokenizeOnTopLevelParentheses(token);\n    return {\n        methodToken: tokens.slice(0, -1).join(''),\n        argumentTokens: (0, utils_1.pipe)(trimParentheses, tokenizeOnTopLevelComma)(tokens.slice(-1)[0]),\n    };\n};\nvar getIndentation = function (lineOfCode) { return lineOfCode.split('').findIndex((0, utils_1.neq)(' ')); };\nvar getMethodTokenAndClosureCodeBlockFromClosureInvocation = function (token, fullQuery) {\n    // The word before the first curly bracket is the method name\n    // The token may be a double application of a curried function, so we cannot\n    // assume that the first opening curly bracket is closed by the last closing\n    // curly bracket\n    var tokens = tokenizeOnTopLevelCurlyBrackets(token);\n    var methodToken = tokens.slice(0, -1).join('');\n    var closureCodeBlockToken = trimCurlyBrackets(tokens.slice(-1)[0]);\n    var initialClosureCodeBlockIndentation = fullQuery\n        .substr(0, fullQuery.indexOf(closureCodeBlockToken))\n        .split('\\n')\n        .slice(-1)[0].length;\n    return {\n        methodToken: methodToken,\n        closureCodeBlock: trimCurlyBrackets(tokens.slice(-1)[0])\n            .split('\\n')\n            .map(function (lineOfCode, i) { return ({\n            lineOfCode: lineOfCode.trimStart(),\n            relativeIndentation: i === 0 ? getIndentation(lineOfCode) : getIndentation(lineOfCode) - initialClosureCodeBlockIndentation,\n        }); }),\n    };\n};\nvar parseCodeBlockToSyntaxTree = function (fullCode, shouldCalculateInitialHorizontalPosition) { return function (codeBlock) {\n    var tokens = tokenizeOnTopLevelPunctuation(codeBlock);\n    if (tokens.length === 1) {\n        var token = tokens[0];\n        if (isMethodInvocation(token)) {\n            var _a = getMethodTokenAndArgumentTokensFromMethodInvocation(token), methodToken = _a.methodToken, argumentTokens = _a.argumentTokens;\n            return {\n                type: types_1.TokenType.Method,\n                method: parseCodeBlockToSyntaxTree(fullCode)(methodToken),\n                arguments: argumentTokens.map(parseCodeBlockToSyntaxTree(fullCode)),\n            };\n        }\n        if (isClosureInvocation(token)) {\n            var _b = getMethodTokenAndClosureCodeBlockFromClosureInvocation(token, fullCode), methodToken = _b.methodToken, closureCodeBlock = _b.closureCodeBlock;\n            return {\n                type: types_1.TokenType.Closure,\n                method: parseCodeBlockToSyntaxTree(fullCode)(methodToken),\n                closureCodeBlock: closureCodeBlock,\n            };\n        }\n        if (isString(token)) {\n            return {\n                type: types_1.TokenType.String,\n                string: token,\n            };\n        }\n        return {\n            type: types_1.TokenType.Word,\n            word: token,\n        };\n    }\n    return {\n        type: types_1.TokenType.Traversal,\n        steps: tokens.map(parseCodeBlockToSyntaxTree(fullCode)),\n        initialHorizontalPosition: shouldCalculateInitialHorizontalPosition\n            ? fullCode.substr(0, fullCode.indexOf(codeBlock)).split('\\n').slice(-1)[0].length\n            : 0,\n    };\n}; };\nvar parseNonGremlinCodeToSyntaxTree = function (code) { return ({\n    type: types_1.TokenType.NonGremlinCode,\n    code: code,\n}); };\nexports.parseNonGremlinCodeToSyntaxTree = parseNonGremlinCodeToSyntaxTree;\nvar parseToSyntaxTrees = function (code) {\n    var queries = (0, extractGremlinQueries_1.extractGremlinQueries)(code);\n    var _a = queries.reduce(function (state, query) {\n        var indexOfQuery = state.remainingCode.indexOf(query);\n        var nonGremlinCode = state.remainingCode.substr(0, indexOfQuery);\n        return {\n            syntaxTrees: __spreadArray(__spreadArray([], state.syntaxTrees, true), [\n                (0, exports.parseNonGremlinCodeToSyntaxTree)(nonGremlinCode),\n                parseCodeBlockToSyntaxTree(code, true)(query),\n            ], false),\n            remainingCode: state.remainingCode.substr(indexOfQuery + query.length),\n        };\n    }, { syntaxTrees: [], remainingCode: code }), syntaxTrees = _a.syntaxTrees, remainingCode = _a.remainingCode;\n    if (!remainingCode)\n        return syntaxTrees;\n    return __spreadArray(__spreadArray([], syntaxTrees, true), [(0, exports.parseNonGremlinCodeToSyntaxTree)(remainingCode)], false);\n};\nexports.parseToSyntaxTrees = parseToSyntaxTrees;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.recreateQueryStringFromFormattedSyntaxTrees = void 0;\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar recreateQueryStringFromFormattedSyntaxTree = function (syntaxTree) {\n    if (syntaxTree.type === types_1.TokenType.NonGremlinCode) {\n        return syntaxTree.code;\n    }\n    if (syntaxTree.type === types_1.TokenType.Traversal) {\n        return syntaxTree.stepGroups\n            .map(function (stepGroup) { return stepGroup.steps.map(recreateQueryStringFromFormattedSyntaxTree).join('.'); })\n            .join('\\n');\n    }\n    if (syntaxTree.type === types_1.TokenType.Method) {\n        return ((syntaxTree.shouldStartWithDot ? '.' : '') +\n            [\n                recreateQueryStringFromFormattedSyntaxTree(syntaxTree.method) + '(',\n                syntaxTree.argumentGroups\n                    .map(function (args) { return args.map(recreateQueryStringFromFormattedSyntaxTree).join(', '); })\n                    .join(',\\n') +\n                    ')' +\n                    (syntaxTree.shouldEndWithDot ? '.' : ''),\n            ].join(syntaxTree.argumentsShouldStartOnNewLine ? '\\n' : ''));\n    }\n    if (syntaxTree.type === types_1.TokenType.Closure) {\n        return ((syntaxTree.shouldStartWithDot ? '.' : '') +\n            recreateQueryStringFromFormattedSyntaxTree(syntaxTree.method) +\n            '{' +\n            syntaxTree.closureCodeBlock\n                .map(function (_a, i) {\n                var lineOfCode = _a.lineOfCode, localIndentation = _a.localIndentation;\n                return \"\".concat((0, utils_1.spaces)(localIndentation)).concat(lineOfCode);\n            })\n                .join('\\n') +\n            '}' +\n            (syntaxTree.shouldEndWithDot ? '.' : ''));\n    }\n    if (syntaxTree.type === types_1.TokenType.String) {\n        return (0, utils_1.spaces)(syntaxTree.localIndentation) + syntaxTree.string;\n    }\n    if (syntaxTree.type === types_1.TokenType.Word) {\n        return ((0, utils_1.spaces)(syntaxTree.localIndentation) +\n            (syntaxTree.shouldStartWithDot ? '.' : '') +\n            syntaxTree.word +\n            (syntaxTree.shouldEndWithDot ? '.' : ''));\n    }\n    // The following line is just here to convince TypeScript that the return type\n    // is string and not string | undefined.\n    return '';\n};\nvar withIndentationIfNotEmpty = function (indentation) { return function (lineOfCode) {\n    if (!lineOfCode)\n        return lineOfCode;\n    return (0, utils_1.spaces)(indentation) + lineOfCode;\n}; };\nvar lineIsEmpty = function (lineOfCode) {\n    return lineOfCode.split('').every((0, utils_1.eq)(' '));\n};\nvar removeIndentationFromEmptyLines = function (lineOfCode) {\n    if (lineIsEmpty(lineOfCode))\n        return '';\n    return lineOfCode;\n};\nvar recreateQueryStringFromFormattedSyntaxTrees = function (_a) {\n    var globalIndentation = _a.globalIndentation;\n    return function (syntaxTrees) {\n        return syntaxTrees\n            .map(recreateQueryStringFromFormattedSyntaxTree)\n            .join('')\n            .split('\\n')\n            .map(withIndentationIfNotEmpty(globalIndentation))\n            .map(removeIndentationFromEmptyLines)\n            .join('\\n');\n    };\n};\nexports.recreateQueryStringFromFormattedSyntaxTrees = recreateQueryStringFromFormattedSyntaxTrees;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatQuery = void 0;\nvar formatSyntaxTrees_1 = require(\"./formatSyntaxTrees\");\nvar parseToSyntaxTrees_1 = require(\"./parseToSyntaxTrees\");\nvar recreateQueryStringFromFormattedSyntaxTrees_1 = require(\"./recreateQueryStringFromFormattedSyntaxTrees\");\nvar utils_1 = require(\"./utils\");\nvar withDefaults = function (config) { return (__assign({ indentation: 0, maxLineLength: 80, shouldPlaceDotsAfterLineBreaks: false }, config)); };\nvar getInternalGremlintConfig = function (_a) {\n    var indentation = _a.indentation, maxLineLength = _a.maxLineLength, shouldPlaceDotsAfterLineBreaks = _a.shouldPlaceDotsAfterLineBreaks;\n    return ({\n        globalIndentation: indentation,\n        localIndentation: 0,\n        maxLineLength: maxLineLength - indentation,\n        shouldPlaceDotsAfterLineBreaks: shouldPlaceDotsAfterLineBreaks,\n        shouldStartWithDot: false,\n        shouldEndWithDot: false,\n        horizontalPosition: 0,\n    });\n};\nvar formatQuery = function (query, config) {\n    var internalConfig = getInternalGremlintConfig(withDefaults(config !== null && config !== void 0 ? config : {}));\n    return (0, utils_1.pipe)(parseToSyntaxTrees_1.parseToSyntaxTrees, (0, formatSyntaxTrees_1.formatSyntaxTrees)(internalConfig), (0, recreateQueryStringFromFormattedSyntaxTrees_1.recreateQueryStringFromFormattedSyntaxTrees)(internalConfig))(query);\n};\nexports.formatQuery = formatQuery;\n","\"use strict\";\n/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatQuery = void 0;\nvar formatQuery_1 = require(\"./formatQuery\");\nObject.defineProperty(exports, \"formatQuery\", { enumerable: true, get: function () { return formatQuery_1.formatQuery; } });\n","import { getRenderingRef, forceUpdate } from '@stencil/core';\n\nconst appendToMap = (map, propName, value) => {\n    const items = map.get(propName);\n    if (!items) {\n        map.set(propName, [value]);\n    }\n    else if (!items.includes(value)) {\n        items.push(value);\n    }\n};\nconst debounce = (fn, ms) => {\n    let timeoutId;\n    return (...args) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = 0;\n            fn(...args);\n        }, ms);\n    };\n};\n\n/**\n * Check if a possible element isConnected.\n * The property might not be there, so we check for it.\n *\n * We want it to return true if isConnected is not a property,\n * otherwise we would remove these elements and would not update.\n *\n * Better leak in Edge than to be useless.\n */\nconst isConnected = (maybeElement) => !('isConnected' in maybeElement) || maybeElement.isConnected;\nconst cleanupElements = debounce((map) => {\n    for (let key of map.keys()) {\n        map.set(key, map.get(key).filter(isConnected));\n    }\n}, 2000);\nconst stencilSubscription = () => {\n    if (typeof getRenderingRef !== 'function') {\n        // If we are not in a stencil project, we do nothing.\n        // This function is not really exported by @stencil/core.\n        return {};\n    }\n    const elmsToUpdate = new Map();\n    return {\n        dispose: () => elmsToUpdate.clear(),\n        get: (propName) => {\n            const elm = getRenderingRef();\n            if (elm) {\n                appendToMap(elmsToUpdate, propName, elm);\n            }\n        },\n        set: (propName) => {\n            const elements = elmsToUpdate.get(propName);\n            if (elements) {\n                elmsToUpdate.set(propName, elements.filter(forceUpdate));\n            }\n            cleanupElements(elmsToUpdate);\n        },\n        reset: () => {\n            elmsToUpdate.forEach((elms) => elms.forEach(forceUpdate));\n            cleanupElements(elmsToUpdate);\n        },\n    };\n};\n\nconst unwrap = (val) => (typeof val === 'function' ? val() : val);\nconst createObservableMap = (defaultState, shouldUpdate = (a, b) => a !== b) => {\n    const unwrappedState = unwrap(defaultState);\n    let states = new Map(Object.entries(unwrappedState !== null && unwrappedState !== void 0 ? unwrappedState : {}));\n    const handlers = {\n        dispose: [],\n        get: [],\n        set: [],\n        reset: [],\n    };\n    const reset = () => {\n        var _a;\n        // When resetting the state, the default state may be a function - unwrap it to invoke it.\n        // otherwise, the state won't be properly reset\n        states = new Map(Object.entries((_a = unwrap(defaultState)) !== null && _a !== void 0 ? _a : {}));\n        handlers.reset.forEach((cb) => cb());\n    };\n    const dispose = () => {\n        // Call first dispose as resetting the state would\n        // cause less updates ;)\n        handlers.dispose.forEach((cb) => cb());\n        reset();\n    };\n    const get = (propName) => {\n        handlers.get.forEach((cb) => cb(propName));\n        return states.get(propName);\n    };\n    const set = (propName, value) => {\n        const oldValue = states.get(propName);\n        if (shouldUpdate(value, oldValue, propName)) {\n            states.set(propName, value);\n            handlers.set.forEach((cb) => cb(propName, value, oldValue));\n        }\n    };\n    const state = (typeof Proxy === 'undefined'\n        ? {}\n        : new Proxy(unwrappedState, {\n            get(_, propName) {\n                return get(propName);\n            },\n            ownKeys(_) {\n                return Array.from(states.keys());\n            },\n            getOwnPropertyDescriptor() {\n                return {\n                    enumerable: true,\n                    configurable: true,\n                };\n            },\n            has(_, propName) {\n                return states.has(propName);\n            },\n            set(_, propName, value) {\n                set(propName, value);\n                return true;\n            },\n        }));\n    const on = (eventName, callback) => {\n        handlers[eventName].push(callback);\n        return () => {\n            removeFromArray(handlers[eventName], callback);\n        };\n    };\n    const onChange = (propName, cb) => {\n        const unSet = on('set', (key, newValue) => {\n            if (key === propName) {\n                cb(newValue);\n            }\n        });\n        // We need to unwrap the defaultState because it might be a function.\n        // Otherwise we might not be sending the right reset value.\n        const unReset = on('reset', () => cb(unwrap(defaultState)[propName]));\n        return () => {\n            unSet();\n            unReset();\n        };\n    };\n    const use = (...subscriptions) => {\n        const unsubs = subscriptions.reduce((unsubs, subscription) => {\n            if (subscription.set) {\n                unsubs.push(on('set', subscription.set));\n            }\n            if (subscription.get) {\n                unsubs.push(on('get', subscription.get));\n            }\n            if (subscription.reset) {\n                unsubs.push(on('reset', subscription.reset));\n            }\n            if (subscription.dispose) {\n                unsubs.push(on('dispose', subscription.dispose));\n            }\n            return unsubs;\n        }, []);\n        return () => unsubs.forEach((unsub) => unsub());\n    };\n    const forceUpdate = (key) => {\n        const oldValue = states.get(key);\n        handlers.set.forEach((cb) => cb(key, oldValue, oldValue));\n    };\n    return {\n        state,\n        get,\n        set,\n        on,\n        onChange,\n        use,\n        dispose,\n        reset,\n        forceUpdate,\n    };\n};\nconst removeFromArray = (array, item) => {\n    const index = array.indexOf(item);\n    if (index >= 0) {\n        array[index] = array[array.length - 1];\n        array.length--;\n    }\n};\n\nconst createStore = (defaultState, shouldUpdate) => {\n    const map = createObservableMap(defaultState, shouldUpdate);\n    map.use(stencilSubscription());\n    return map;\n};\n\nexport { createObservableMap, createStore };\n","import axios from 'axios';\nimport { formatQuery } from 'gremlint';\nimport { createStore } from '@stencil/store';\n\nimport { formatJSON } from '../../utils/utils';\n\ntype IStore = {\n  queryMode: 'read' | 'insert' | 'update' | 'delete';\n  isCustomQuery: boolean;\n  isFetchedData: boolean;\n  showMeta: boolean;\n  isLoading: boolean;\n  isError: boolean;\n  canEdit: boolean;\n\n  hostUrl: string;\n  selectedNodeName: string;\n  limit: number;\n  page: number;\n  total: number;\n  order: {};\n  filter: {};\n\n  updateId: number | string;\n  changesMade: {};\n\n  deleteId: number | string;\n\n  insertNodeLabel: string;\n  insertProperties: {};\n\n  nodes: Array<any>;\n  columnHeaders: Array<any>;\n  savedColumnHeaders: Array<any>;\n  availableNodes: Array<any>;\n  queryHistory: Array<{ id: number, queryTitle: string, queryText: string, queryParameter: string, ownerId: number }>;\n  saveTitle: string;\n  query: string;\n  queryParameter: string;\n\n  errorMessage: string;\n\n  editorTextFlag: boolean;\n  viewQuery: any;\n  stateQuery: any;\n  viewParameter: any;\n  stateParameter: any;\n  timeTaken: number | null;\n  refreshData: () => Promise<void>;\n};\n\nconst { state, onChange, reset } = createStore<IStore>({\n  // flags\n  queryMode: 'read',\n  isCustomQuery: false,\n  isFetchedData: false,\n  showMeta: false,\n  isLoading: false,\n  isError: false,\n  canEdit: false,\n\n  hostUrl: '',\n\n  // parameters\n  selectedNodeName: null,\n  limit: 10,\n  page: 1,\n  total: 0,\n  order: {},\n  filter: {},\n\n  // edit parameters\n  updateId: null,\n  changesMade: {},\n\n  // delete parameters\n  deleteId: null,\n\n  // insert parameters\n  insertNodeLabel: null,\n  insertProperties: {},\n\n  queryHistory: [],\n  saveTitle: '',\n  // response\n  nodes: [],\n  columnHeaders: [],\n  savedColumnHeaders: [],\n  availableNodes: [],\n  query: '\\n\\n\\n\\n\\n\\n\\n\\n\\n',\n  queryParameter: '{\\n  \\n}\\n\\n\\n\\n\\n\\n',\n\n  errorMessage: null,\n\n  // editor state\n  editorTextFlag: false,\n  viewQuery: null,\n  stateQuery: null,\n  viewParameter: null,\n  stateParameter: null,\n  timeTaken: null,\n\n  refreshData: async () => {\n    fetchData(state.selectedNodeName);\n  },\n});\n\nonChange('queryMode', value => {\n  switch (value) {\n    case 'read':\n      state.insertNodeLabel = null;\n      state.insertProperties = {};\n      state.updateId = null;\n      state.changesMade = {};\n      state.deleteId = null;\n    case 'insert':\n      state.limit = 10;\n      state.page = 1;\n      state.order = {};\n      state.filter = {};\n      state.updateId = null;\n      state.changesMade = {};\n      state.deleteId = null;\n    case 'update':\n      state.limit = 10;\n      state.page = 1;\n      state.order = {};\n      state.filter = {};\n      state.deleteId = null;\n      state.insertNodeLabel = null;\n      state.insertProperties = {};\n    case 'delete':\n      state.limit = 10;\n      state.page = 1;\n      state.order = {};\n      state.filter = {};\n      state.updateId = null;\n      state.changesMade = {};\n      state.insertNodeLabel = null;\n      state.insertProperties = {};\n  }\n});\n\nonChange('queryHistory', value => {\n  const keys = new Set();\n\n  value.forEach(row => {\n    let values = ['id', 'ownerId'];\n    Object.keys(row).filter(item => !values.includes(item)).forEach(k => {\n      keys.add(k);\n    });\n  });\n  state.savedColumnHeaders = [...keys].map((k: string) => {\n    let dataType = 'string';\n    state.queryHistory.every(row => {\n      if (row[k] !== undefined) {\n        dataType = typeof row[k];\n        return false;\n      }\n      return true;\n    });\n\n    return {\n      alias: k,\n      title: k,\n      type: dataType,\n    };\n  });\n})\n\nonChange('nodes', value => {\n  const keys = new Set();\n\n  value.forEach(row => {\n    Object.keys(row).forEach(k => {\n      keys.add(k);\n    });\n  });\n\n  state.columnHeaders = [...keys].map((k: string) => {\n    let dataType = 'string';\n    value.every(row => {\n      if (row[k] !== undefined) {\n        dataType = typeof row[k];\n        return false;\n      }\n      return true;\n    });\n\n    return {\n      alias: k,\n      title: k,\n      type: dataType,\n    };\n  });\n});\n\nonChange('query', value => {\n  if (state.viewQuery) {\n    let transactionToAdd = state.viewQuery.state.update({\n      changes: { from: 0, to: state.viewQuery.state.doc.toString().length, insert: `${value}` },\n    });\n    state.viewQuery.dispatch(transactionToAdd);\n  }\n});\n\nonChange('queryParameter', value => {\n  if (state.viewParameter) {\n    let transactionToAdd = state.viewParameter.state.update({\n      changes: { from: 0, to: state.viewParameter.state.doc.toString().length, insert: `${value}` },\n    });\n    state.viewParameter.dispatch(transactionToAdd);\n  }\n});\n\nconst getParamsForBuilder = () => {\n  return {\n    read: {\n      showMeta: state.showMeta,\n      limit: state.limit,\n      offset: state.limit * state.page - state.limit,\n      order: state.order,\n      filter: state.filter,\n    },\n    update: {\n      updateId: state.updateId,\n      changes: state.changesMade,\n    },\n    delete: {\n      deleteId: state.deleteId,\n    },\n    insert: {\n      label: state.insertNodeLabel,\n      properties: state.insertProperties,\n    },\n  };\n};\n\nconst getQueryPreview = async () => {\n  try {\n    const res = await axios.post(`${state.hostUrl}/query/builder/${state.selectedNodeName}/${state.queryMode}/preview`, getParamsForBuilder());\n    return res.data;\n  } catch (error) {\n    state.isError = true;\n    state.errorMessage = error.response?.data?.error?.split(':')[0] || 'Failed to fetch data from db';\n  }\n};\n\nconst fetchData = async (nodeName: string) => {\n  if (state.selectedNodeName) {\n    state.isCustomQuery = false;\n    state.timeTaken = null;\n    state.isError = false;\n    state.errorMessage = null;\n    state.isLoading = true;\n    state.selectedNodeName = nodeName;\n\n    try {\n      const res = await axios.post(`${state.hostUrl}/query/builder/${nodeName}/${state.queryMode}`, getParamsForBuilder());\n\n      state.nodes = res.data.nodes;\n      state.total = res.data.count;\n      state.query = formatQuery(res.data.query);\n      state.queryParameter = formatJSON(res.data.queryParameters);\n      let transactionToAddQuery = state.viewQuery.state.update({\n        changes: { from: 0, to: state.viewQuery.state.doc.toString().length, insert: state.query },\n      });\n      state.viewQuery.dispatch(transactionToAddQuery);\n\n      let transactionToAddParameter = state.viewParameter.state.update({\n        changes: { from: 0, to: state.viewParameter.state.doc.toString().length, insert: state.queryParameter },\n      });\n      state.viewParameter.dispatch(transactionToAddParameter);\n      state.timeTaken = res.data.timeTaken;\n      state.isFetchedData = true;\n    } catch (error) {\n      state.isError = true;\n      state.errorMessage = error.response?.data?.error?.split(':')[0] || 'Failed to fetch data from db';\n    }\n    state.isLoading = false;\n  }\n};\n\nexport default state;\nexport { fetchData, reset, getQueryPreview };\n"]}
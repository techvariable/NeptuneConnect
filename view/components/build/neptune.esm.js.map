{"version":3,"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"names":["patchBrowser","importMeta","import","meta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","selectedNodeName","nodeList","queryDocument","parameterDocument","nodeData","nodeDataColumns","errorMessage","isLoading","loadingNodes","nodeError","navigators","permissions","users","count","limitbackend","offsetbackend","allPermissions","parsedPermissions","updatedUsers","limit","offset","loading","selectedRole","view","state","roles","resStatus","syncVal","apiurl","email","name","password","rePassword","user","isLoadingError","total","tableData","permissionstring","table","tableBody","api","apiExist","darkMode","isEditorAccordianOpen","isOtherAccordianOpen","accordianState","editorSettingsState","generalSettingsState","doc","header","body","currentBody","value","toggleSort","currentPage","dataPerPage","isModalOpen","tableHeader","rows","data","from","to","isSearchMenuOpen","stringifieduser","repassword","error","type","iconPosition","btnLabel","addClass","responseLabel","selected","dropDownState","isAvatarDropDownOpen","userDetails","align","width","refresh","showBackDrop","backDropHandler","userId","ismodelopen","showDropdown","option","toggle","userid","rolesobj","rowsHandler","totalData","nextHandler","prevHandler","jumpPageHandler","listTitle","list","fetchData","alias","searchMethod","clearSearch","isMenuOpen","customClass","clickHandler","disabled","color","size","title","icon","placeholder","onChange","onClick","eye","showPassword","hoverColor","disabledHandler","rowPerPage","headerList","autocompute","page","tBody","sortId","sortDir","sortObj","search","dataLength","next","prev","toggleSortMethod","columns","showActions","onEdit","onDelete","onPaginate","showPagination","supportedLimit","customStyle","editRow","isEditing","isEditingIndex","editingState","columnNames","processedData","label","labels","checked","disabledOptions","tabslist","activeIndex","tabClickHandler","varient","startIcon","endIcon","fetchNavigators","downloadError","addNodeState","customDropDownValue","nodes","valueOptions","propSelectedOptionLabel","isFormValid","queryDataFetcher","deleteQueryData","editModalTabActiveIndex","query","parameters","propOptions","optionHandler","selectedOption","optionListProp","dropDownValue","selectHandler","isDropDownOpen","optionList","dropdownSearchKey","isFilter","isFilterKey","downloadOptions","selectedDownloadOption","node","isDownloading","downloadProgress","startingIndex","endingIndex","isCsv","fileOptions","selectedFileOption","toggleModalState","closeSearchModal","searchOptions","textSearchOptions","numberSearchOptions","selectedSearchOption","selectedTextSearchOption","selectedNumberSearchOption","colName","sortchips","searchChips","removeSortChip","removeSearchChip","togglesort","isSelected","toggleButtonHandler","isDisabled","buttonValue","checkedValue","setActive","onClickRun","formatter","refreshLoading","isSaveModalOpen","saveError"],"mappings":"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","sourcesContent":["/*\n Stencil Client Patch Browser v2.13.0 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","import { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"]}
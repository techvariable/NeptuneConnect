{"version":3,"sources":["node_modules/@stencil/core/internal/client/patch-browser.js","@lazy-browser-entrypoint?app-data=conditional"],"names":["patchBrowser","importMeta","import","meta","url","opts","resourcesUrl","URL","href","promiseResolve","then","options","bootstrapLazy","permissions","selectedNodeName","nodeList","queryDocument","parameterDocument","nodeData","nodeDataColumns","errorMessage","isLoading","loadingNodes","nodeError","navigators","users","count","limitbackend","offsetbackend","allPermissions","parsedPermissions","updatedUsers","limit","offset","loading","selectedRole","view","state","roles","resStatus","syncVal","apiurl","email","name","password","rePassword","user","isLoadingError","total","tableData","error","mode","permissionstring","table","tableBody","api","apiExist","darkMode","isEditorAccordianOpen","isOtherAccordianOpen","accordianState","editorSettingsState","generalSettingsState","doc","header","body","currentBody","value","toggleSort","currentPage","dataPerPage","isModalOpen","tableHeader","rows","data","from","to","isSearchMenuOpen","stringifieduser","repassword","type","iconPosition","btnLabel","addClass","responseLabel","selected","dropDownState","imgurl","isAvatarDropDownOpen","userDetails","align","width","refresh","headerList","rowsHandler","totalData","nextHandler","prevHandler","jumpPageHandler","listTitle","list","fetchData","showDropdown","alias","searchMethod","clearSearch","isMenuOpen","rowPerPage","autocompute","page","tBody","sortId","sortDir","sortObj","search","dataLength","next","prev","toggleSortMethod","userId","ismodelopen","option","toggle","userid","rolesobj","columns","showActions","onEdit","onDelete","onPaginate","showPagination","supportedLimit","customStyle","customClass","editRow","isEditing","isEditingIndex","editingState","columnNames","processedData","label","labels","clickHandler","checked","disabledOptions","tabslist","activeIndex","tabClickHandler","placeholder","onChange","onClick","eye","showPassword","showBackDrop","backDropHandler","disabled","color","size","title","icon","fetchNavigators","downloadError","addNodeState","customDropDownValue","nodes","valueOptions","propSelectedOptionLabel","isFormValid","queryDataFetcher","deleteQueryData","editModalTabActiveIndex","query","parameters","propOptions","optionHandler","selectedOption","optionListProp","dropDownValue","selectHandler","isDropDownOpen","optionList","dropdownSearchKey","hoverColor","disabledHandler","varient","startIcon","endIcon","isFilter","isFilterKey","downloadOptions","selectedDownloadOption","node","isDownloading","downloadProgress","startingIndex","endingIndex","isCsv","fileOptions","selectedFileOption","toggleModalState","closeSearchModal","searchOptions","textSearchOptions","numberSearchOptions","selectedSearchOption","selectedTextSearchOption","selectedNumberSearchOption","colName","sortchips","searchChips","removeSortChip","removeSearchChip","togglesort","isSelected","toggleButtonHandler","isDisabled","buttonValue","checkedValue","setActive","onClickRun","formatter","refreshLoading","isSaveModalOpen","saveError"],"mappings":"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","sourcesContent":["/*\n Stencil Client Patch Browser v2.13.0 | MIT Licensed | https://stenciljs.com\n */\nimport { BUILD, NAMESPACE } from '@stencil/core/internal/app-data';\nimport { consoleDevInfo, plt, win, doc, promiseResolve, H } from '@stencil/core';\nconst getDynamicImportFunction = (namespace) => `__sc_import_${namespace.replace(/\\s|-/g, '_')}`;\nconst patchBrowser = () => {\n    // NOTE!! This fn cannot use async/await!\n    if (BUILD.isDev && !BUILD.isTesting) {\n        consoleDevInfo('Running in development mode.');\n    }\n    if (BUILD.cssVarShim) {\n        // shim css vars\n        plt.$cssShim$ = win.__cssshim;\n    }\n    if (BUILD.cloneNodeFix) {\n        // opted-in to polyfill cloneNode() for slot polyfilled components\n        patchCloneNodeFix(H.prototype);\n    }\n    if (BUILD.profile && !performance.mark) {\n        // not all browsers support performance.mark/measure (Safari 10)\n        performance.mark = performance.measure = () => {\n            /*noop*/\n        };\n        performance.getEntriesByName = () => [];\n    }\n    // @ts-ignore\n    const scriptElm = BUILD.scriptDataOpts || BUILD.safari10 || BUILD.dynamicImportShim\n        ? Array.from(doc.querySelectorAll('script')).find((s) => new RegExp(`\\/${NAMESPACE}(\\\\.esm)?\\\\.js($|\\\\?|#)`).test(s.src) ||\n            s.getAttribute('data-stencil-namespace') === NAMESPACE)\n        : null;\n    const importMeta = import.meta.url;\n    const opts = BUILD.scriptDataOpts ? scriptElm['data-opts'] || {} : {};\n    if (BUILD.safari10 && 'onbeforeload' in scriptElm && !history.scrollRestoration /* IS_ESM_BUILD */) {\n        // Safari < v11 support: This IF is true if it's Safari below v11.\n        // This fn cannot use async/await since Safari didn't support it until v11,\n        // however, Safari 10 did support modules. Safari 10 also didn't support \"nomodule\",\n        // so both the ESM file and nomodule file would get downloaded. Only Safari\n        // has 'onbeforeload' in the script, and \"history.scrollRestoration\" was added\n        // to Safari in v11. Return a noop then() so the async/await ESM code doesn't continue.\n        // IS_ESM_BUILD is replaced at build time so this check doesn't happen in systemjs builds.\n        return {\n            then() {\n                /* promise noop */\n            },\n        };\n    }\n    if (!BUILD.safari10 && importMeta !== '') {\n        opts.resourcesUrl = new URL('.', importMeta).href;\n    }\n    else if (BUILD.dynamicImportShim || BUILD.safari10) {\n        opts.resourcesUrl = new URL('.', new URL(scriptElm.getAttribute('data-resources-url') || scriptElm.src, win.location.href)).href;\n        if (BUILD.dynamicImportShim) {\n            patchDynamicImport(opts.resourcesUrl, scriptElm);\n        }\n        if (BUILD.dynamicImportShim && !win.customElements) {\n            // module support, but no custom elements support (Old Edge)\n            // @ts-ignore\n            return import(/* webpackChunkName: \"polyfills-dom\" */ './dom.js').then(() => opts);\n        }\n    }\n    return promiseResolve(opts);\n};\nconst patchDynamicImport = (base, orgScriptElm) => {\n    const importFunctionName = getDynamicImportFunction(NAMESPACE);\n    try {\n        // test if this browser supports dynamic imports\n        // There is a caching issue in V8, that breaks using import() in Function\n        // By generating a random string, we can workaround it\n        // Check https://bugs.chromium.org/p/chromium/issues/detail?id=990810 for more info\n        win[importFunctionName] = new Function('w', `return import(w);//${Math.random()}`);\n    }\n    catch (e) {\n        // this shim is specifically for browsers that do support \"esm\" imports\n        // however, they do NOT support \"dynamic\" imports\n        // basically this code is for old Edge, v18 and below\n        const moduleMap = new Map();\n        win[importFunctionName] = (src) => {\n            const url = new URL(src, base).href;\n            let mod = moduleMap.get(url);\n            if (!mod) {\n                const script = doc.createElement('script');\n                script.type = 'module';\n                script.crossOrigin = orgScriptElm.crossOrigin;\n                script.src = URL.createObjectURL(new Blob([`import * as m from '${url}'; window.${importFunctionName}.m = m;`], {\n                    type: 'application/javascript',\n                }));\n                mod = new Promise((resolve) => {\n                    script.onload = () => {\n                        resolve(win[importFunctionName].m);\n                        script.remove();\n                    };\n                });\n                moduleMap.set(url, mod);\n                doc.head.appendChild(script);\n            }\n            return mod;\n        };\n    }\n};\nconst patchCloneNodeFix = (HTMLElementPrototype) => {\n    const nativeCloneNodeFn = HTMLElementPrototype.cloneNode;\n    HTMLElementPrototype.cloneNode = function (deep) {\n        if (this.nodeName === 'TEMPLATE') {\n            return nativeCloneNodeFn.call(this, deep);\n        }\n        const clonedNode = nativeCloneNodeFn.call(this, false);\n        const srcChildNodes = this.childNodes;\n        if (deep) {\n            for (let i = 0; i < srcChildNodes.length; i++) {\n                // Node.ATTRIBUTE_NODE === 2, and checking because IE11\n                if (srcChildNodes[i].nodeType !== 2) {\n                    clonedNode.appendChild(srcChildNodes[i].cloneNode(true));\n                }\n            }\n        }\n        return clonedNode;\n    };\n};\nexport { patchBrowser };\n","import { bootstrapLazy } from '@stencil/core';\nimport { patchBrowser } from '@stencil/core/internal/client/patch-browser';\nimport { globalScripts } from '@stencil/core/internal/app-globals';\npatchBrowser().then(options => {\n  globalScripts();\n  return bootstrapLazy([/*!__STENCIL_LAZY_DATA__*/], options);\n});\n"]}
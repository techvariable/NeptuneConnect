{"version":3,"sources":["src/components/usersPage/edit-user/edit-user.tsx","src/components/usersPage/user-drop-down/user-drop-down.css?tag=user-drop-down&encapsulation=scoped","src/components/usersPage/user-drop-down/user-drop-down.tsx"],"names":["EditUser","[object Object]","hostRef","this","rolesobj","email","loading","choicesRef","showDropdown","value","role","allPermissions","obj","roleName","id","label","persistant","selected","disabled","rolesTemp","push","axios","get","url","userid","then","res","data","forEach","item","roleId","catch","err","console","log","e","preventDefault","selectedRoles","target","Number","put","userId","roles","Swal","fire","position","icon","text","showConfirmButton","timer","toggle","error","title","response","message","event","h","Host","ismodelopen","onSubmit","handleSubmit","class","aria-labelledby","aria-modal","aria-hidden","xmlns","fill","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","type","name","required","placeholder","readOnly","onInput","handleChange","multiple","map","color","clickHandler","varient","userDropDownCss","UserDropDown","option","edit","delete","toggleDropdown","backDropHandler","refresh","deleteHandler","stopPropagation","onClick","dropDownClickHandler","showBackDrop","_a","Object","keys","hasAccess","parsedPermissions","permission","href","toUpperCase"],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, State } from '@stencil/core';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\n@Component({\n  tag: 'edit-user',\n  scoped: true,\n})\nexport class EditUser {\n  private choicesRef;\n\n  openDropDown() {\n    this.choicesRef.showDropdown(false);\n  }\n  @Prop() url: string;\n  @Prop() ismodelopen: boolean;\n  @Prop() value: string;\n  @Prop() toggle: () => void;\n  @Prop() userid: number;\n  @Prop() allPermissions: any;\n  @State() rolesobj: {}[] = [];\n  @State() email: string = '';\n  @State() loading = false;\n\n  componentWillLoad() {\n    this.email = this.value;\n    for (let role of this.allPermissions) {\n      let obj = {\n        value: role.roleName,\n        id: role.id,\n        label: role.roleName,\n        persistant: false,\n        selected: false,\n        disabled: false,\n      };\n      const rolesTemp = [...this.rolesobj];\n      rolesTemp.push(obj);\n      this.rolesobj = rolesTemp;\n    }\n    axios\n      .get(`${this.url}/users/roles?userId=${this.userid}`)\n      .then((res: any) => {\n        for (let role of this.rolesobj) {\n          res.data.forEach(item => {\n            if (item.roleId === role['id']) {\n              role['selected'] = true;\n            }\n            if (item.roleId === role['id'] && item.persistant === true) {\n              role['persistant'] = true;\n            }\n          });\n        }\n\n        this.rolesobj = [...this.rolesobj];\n      })\n      .catch(err => console.log(err));\n  }\n\n  async handleSubmit(e) {\n    this.loading = true;\n    e.preventDefault();\n\n    let selectedRoles = [];\n    this.rolesobj.forEach(role => {\n      if (role['persistant'] === true) {\n        selectedRoles.push(role['id']);\n      }\n    });\n    for (let item of e.target[1]) {\n      if (item.selected === true) {\n        selectedRoles.push(Number(item.value));\n      }\n    }\n\n    try {\n      const res = await axios.put(`${this.url}/users/roles`, {\n        userId: this.userid,\n        roles: selectedRoles,\n      });\n      this.loading = false;\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        text: 'Roles updated successfully!',\n        showConfirmButton: false,\n        timer: 1500,\n      });\n      for (let role of this.rolesobj) {\n        res.data.forEach(item => {\n          if (item.roleId === role['id']) {\n            role['selected'] = true;\n          }\n          if (item.roleId === role['id'] && item.persistant === true) {\n            role['persistant'] = true;\n          }\n        });\n      }\n      this.value = '';\n      this.toggle();\n    } catch (error) {\n      this.loading = false;\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: error.response.data.message,\n      });\n      this.value = '';\n      this.toggle();\n    }\n  }\n\n  handleChange(event) {\n    this.value = event.target.value;\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.ismodelopen && (\n          <form onSubmit={e => this.handleSubmit(e)} class=\"pt-10 space-y-3\">\n            <div class=\"fixed z-10 inset-0 overflow-y-scroll custom-scrollbar \" aria-labelledby=\"modal-title\" role=\"dialog\" aria-modal=\"true\">\n              <div class=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                <div class=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" aria-hidden=\"true\"></div>\n\n                {/* <!-- This element is to trick the browser into centering the modal contents. --> */}\n                <span class=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                  &#8203;\n                </span>\n\n                <div class=\"relative inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                  <div class=\"bg-white px-4 pt-2 pb-4 sm:p-6 sm:pb-4\">\n                    <div class=\"sm:flex sm:items-start\">\n                      <div class=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-sky-100 sm:mx-0 sm:h-10 sm:w-10\">\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6 text-sky-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                      </div>\n                      <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 p-4 sm:text-left flex-grow\">\n                        <h3 class=\"text-lg leading-6 font-medium text-gray-900\" id=\"modal-title\">\n                          Edit User\n                        </h3>\n                        <div class=\"mt-2\">\n                          <p class=\"text-md text-gray-500 mb-4\">Email of the user.</p>\n                          <input\n                            type=\"email\"\n                            name=\"email\"\n                            required\n                            placeholder=\"email@example.com\"\n                            class=\"border w-full px-4 py-2 rounded-md text-sm mb-4\"\n                            readOnly\n                            disabled\n                            value={this.email}\n                            onInput={event => this.handleChange(event)}\n                          />\n                        </div>\n\n                        <div class=\"w-full\">\n                          <p class=\"z-10 text-md text-gray-500 mb-4\">Select permissions</p>\n                          <label class=\"block text-left\">\n                            <select name=\"role\" class=\"form-multiselect block w-full mt-1 border rounded-md \" multiple>\n                              {this.rolesobj.map((role: any) => (\n                                <option\n                                  class=\"px-6 py-1 hover:bg-gray-200 cursor-pointer disabled:bg-gray-500 disabled:text-white disabled:font-semibold\"\n                                  disabled={role.persistant}\n                                  selected={role.selected || role.persistant}\n                                  value={role.id}\n                                >\n                                  {role.value}\n                                </option>\n                              ))}\n                            </select>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div>\n                    {/* <div class=\"w-full md:w-1/2 flex flex-col items-center h-64 mx-auto\"></div> */}\n                    <div class=\"bg-gray-50 pb-4 sm:px-6 sm:flex sm:flex-row-reverse gap-4\">\n                      <icon-label-submit-button type=\"submit\" color=\"tertiary\" loading={this.loading}>\n                        Update\n                      </icon-label-submit-button>\n                      <icon-label-submit-button clickHandler={() => this.toggle()} varient=\"outlined\">\n                        Cancel\n                      </icon-label-submit-button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </form>\n        )}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\n.disabled-custom:disabled{\n  opacity: 0.5;\n  color: rgb(204, 202, 202);\n}","import { Component, h, Prop, State } from '@stencil/core';\nimport { hasAccess } from '../../../utils/utils';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\n@Component({\n  tag: 'user-drop-down',\n  styleUrl: 'user-drop-down.css',\n  scoped: true,\n})\nexport class UserDropDown {\n  @Prop() userId: number = 0;\n  @Prop() email: string;\n  @Prop() url: string;\n  @Prop() refresh: any;\n  @Prop() parsedPermissions: [];\n  @Prop() allPermissions: {}[];\n  @State() ismodelopen: boolean = false;\n  @State() value: string;\n  @State() showDropdown: boolean = false;\n  @State() option: any[] = [{ edit: 'update' }, { delete: 'delete' }];\n\n  async deleteHandler() {\n    try {\n      await axios.delete(`${this.url}/users/`, {\n        data: {\n          id: this.userId,\n        },\n      });\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        text: 'User deleted successfully!',\n        showConfirmButton: false,\n        timer: 1500,\n      });\n      this.refresh();\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: error.response.data.message,\n      });\n    }\n  }\n\n  clickHandler(item) {\n    if (item === 'edit') {\n      this.ismodelopen = !this.ismodelopen;\n    }\n    if (item === 'delete') {\n      this.deleteHandler();\n    }\n    this.toggleDropdown();\n  }\n\n  toggleDropdown = () => {\n    this.showDropdown = !this.showDropdown;\n  };\n\n  backDropHandler = () => {\n    this.showDropdown = false;\n  };\n\n  dropDownClickHandler(event) {\n    event.stopPropagation();\n    this.toggleDropdown();\n  }\n\n  render() {\n    return (\n      <div class=\"relative\">\n        {/* Header */}\n        <h2\n          onClick={event => this.dropDownClickHandler(event)}\n          class=\"font-sans text-gray-600 hover:text-indigo-800 cursor-pointer transition text-sm capitalize flex gap-1 items-center\"\n        >\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\n            <path\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n              d=\"M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z\"\n            />\n          </svg>\n        </h2>\n        <backdrop-filter showBackDrop={this.showDropdown} backDropHandler={this.backDropHandler}></backdrop-filter>\n        {/* List */}\n        <div class={this.showDropdown === true ? 'absolute right-0 bg-gray-100 z-10 w-28 text-sm list-none mt-2 rounded divide-y divide-gray-100 shadow ' : 'hidden'}>\n          <ul class=\"py-1\">\n            {this.option?.map(item => (\n              <li class=\"hover:bg-gray-300\">\n                <button\n                  class=\"disabled-custom w-full\"\n                  onClick={e => {\n                    e.stopPropagation();\n                    this.clickHandler(Object.keys(item)[0]);\n                  }}\n                  disabled={!hasAccess(this.parsedPermissions, { name: 'users', permission: item[Object.keys(item)[0]] })}\n                >\n                  <a href=\"#\" class=\"block py-2 px-4 text-base font-sm font-medium text-gray-700\">\n                    {Object.keys(item)[0].toUpperCase()}\n                  </a>\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        {this.ismodelopen && (\n          <edit-user\n            url={this.url}\n            userid={this.userId}\n            ismodelopen={this.ismodelopen}\n            value={this.email}\n            toggle={() => (this.ismodelopen = !this.ismodelopen)}\n            allPermissions={this.allPermissions}\n          ></edit-user>\n        )}\n      </div>\n    );\n  }\n}\n"]}
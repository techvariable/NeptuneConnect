{"version":3,"sources":["src/components/resetPasswordPage/reset-component/reset-component.tsx"],"names":["ResetComponent","[object Object]","hostRef","this","errorMessage","handleSubmit","e","preventDefault","data","FormData","target","password","get","toString","rePassword","length","match","comparePassword","axios","put","apiurl","email","then","res","status","Swal","fire","position","icon","text","showConfirmButton","timer","window","location","assign","url","catch","err","console","log","title","h","class","onSubmit","action","name","method","enctype","type","placeholder","width"],"mappings":"+IAQaA,EAAc,MAJ3BC,YAAAC,aAUWC,KAAAC,aAAuB,GAQhCD,KAAAE,aAAeC,IACbH,KAAKC,aAAe,GACpBE,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,QAC5BP,KAAKQ,SAAWH,EAAKI,IAAI,YAAYC,WACrCV,KAAKW,WAAaN,EAAKI,IAAI,qBAAqBC,WAEhD,GAAIV,KAAKQ,SAASI,OAAS,EAAG,CAC5BZ,KAAKC,aAAe,iDACf,IAAKD,KAAKQ,SAASK,MAAM,6BAA8B,CAC5Db,KAAKC,aAAe,sDACf,CACL,GAAID,KAAKc,gBAAgBd,KAAKQ,SAAUR,KAAKW,cAAgB,KAAM,CACjEI,EACGC,IAAIhB,KAAKiB,OAAQ,CAChBC,MAAOlB,KAAKkB,MACZV,SAAUR,KAAKQ,WAEhBW,MAAKC,IACJ,GAAIA,EAAIC,SAAW,IAAK,CACtBC,EAAKC,KAAK,CACRC,SAAU,SACVC,KAAM,UACNC,KAAM,iCACNC,kBAAmB,MACnBC,MAAO,OAETC,OAAOC,SAASC,OAAO/B,KAAKgC,SAG/BC,OAAMC,IACLC,QAAQC,IAAIF,GACZZ,EAAKC,KAAK,CACRE,KAAM,QACNY,MAAO,UACPX,KAAM,iCAGP,CACL1B,KAAKC,aAAe,6BA7C1BH,gBAAgBU,EAAUG,GACxB,GAAIH,IAAaG,EAAY,CAC3B,OAAO,KAET,OAAO,MA8CTb,SACE,OACEwC,EAAA,UAAA,CAASC,MAAM,oCACbD,EAAA,MAAA,CAAKC,MAAM,6BACTD,EAAA,MAAA,CAAKC,MAAM,yCACTD,EAAA,KAAA,CAAIC,MAAM,sDAAoD,mBAC9DD,EAAA,IAAA,CAAGC,MAAM,0CAAwC,0DAEnDD,EAAA,MAAA,CAAKC,MAAM,gBACTD,EAAA,OAAA,CAAME,SAAUrC,GAAKH,KAAKE,aAAaC,GAAIoC,MAAM,YAAYE,OAAO,SAASC,KAAK,cAAcC,OAAO,OAAOC,QAAQ,uBACpHN,EAAA,MAAA,CAAKC,MAAM,uBACRvC,KAAKC,cAAgB,GAAKqC,EAAA,IAAA,CAAGC,MAAM,iFAAiFvC,KAAKC,cAAoB,KAC9IqC,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,aAAA,CAAYI,KAAK,WAAWG,KAAK,WAAWC,YAAY,oBAE1DR,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,aAAA,CAAYI,KAAK,oBAAoBG,KAAK,WAAWC,YAAY,sBAEnER,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,eAAA,CAAcS,MAAM,OAAOF,KAAK,aAAW","sourcesContent":["import { Component, h, State, Prop } from '@stencil/core';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\n@Component({\n  tag: 'reset-component',\n  scoped: true,\n})\nexport class ResetComponent {\n  @Prop() url: string;\n  @Prop() apiurl: string;\n  @Prop() email: string;\n  @State() password: string;\n  @State() rePassword: string;\n  @State() errorMessage: string = '';\n\n  comparePassword(password, rePassword) {\n    if (password === rePassword) {\n      return true;\n    }\n    return false;\n  }\n  handleSubmit = e => {\n    this.errorMessage = '';\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.password = data.get('password').toString();\n    this.rePassword = data.get('confirmedPassword').toString();\n\n    if (this.password.length < 7) {\n      this.errorMessage = 'Password length is less than 7 characters';\n    } else if (!this.password.match(/([!,%,&,@,#,$,^,*,?,_,~])/)) {\n      this.errorMessage = 'Password does not contain any special character';\n    } else {\n      if (this.comparePassword(this.password, this.rePassword) === true) {\n        axios\n          .put(this.apiurl, {\n            email: this.email,\n            password: this.password,\n          })\n          .then(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                position: 'center',\n                icon: 'success',\n                text: 'Password changed successfully!',\n                showConfirmButton: false,\n                timer: 1500,\n              });\n              window.location.assign(this.url);\n            }\n          })\n          .catch(err => {\n            console.log(err);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!',\n            });\n          });\n      } else {\n        this.errorMessage = 'Password does not match';\n      }\n    }\n  };\n\n  render() {\n    return (\n      <section class=\"text-gray-600 body-font relative\">\n        <div class=\"w-full px-5 py-14 mx-auto\">\n          <div class=\"flex flex-col text-center w-full mb-8\">\n            <h1 class=\"sm:text-2xl font-semibold title-font text-gray-600\">Update Password</h1>\n            <p class=\"w-96 mx-auto leading-relaxed text-base\">Please fill in the form below to continue signing up.</p>\n          </div>\n          <div class=\"w-96 mx-auto\">\n            <form onSubmit={e => this.handleSubmit(e)} class=\"space-y-3\" action=\"/users\" name=\"invite-form\" method=\"post\" enctype=\"multipart/form-data\">\n              <div class=\"flex flex-wrap -m-2\">\n                {this.errorMessage != '' ? <p class=\"px-3 py-2 bg-red-200 text-red-800 border-l-4 border-red-600 w-full -mt-4 mb-6\">{this.errorMessage}</p> : null}\n                <div class=\"pt-3 w-full\">\n                  <text-field name=\"password\" type=\"password\" placeholder=\"Enter password\"></text-field>\n                </div>\n                <div class=\"pt-3 w-full\">\n                  <text-field name=\"confirmedPassword\" type=\"password\" placeholder=\"Confirm password\"></text-field>\n                </div>\n                <div class=\"pt-3 w-full\">\n                  <plain-button width=\"full\" type=\"contained\">\n                    update\n                  </plain-button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n"]}
{"version":3,"sources":["src/components/loginPage/login-form/login-form.css?tag=login-form&encapsulation=scoped","src/components/loginPage/login-form/login-form.tsx"],"names":["loginFormCss","LoginForm","[object Object]","hostRef","this","error","mode","url","email","password","visitEmail","visitSubmitError","emailSubmited","axios","post","location","assign","Error","response","data","message","h","Host","class","src","alt","aria-hidden","fill","viewBox","xmlns","fill-rule","d","clip-rule","onChange","e","target","value","name","type","placeholder","clickHandler","visitHandler","width","action","method","eye","href"],"mappings":"sFAAA,MAAMA,EAAe,sCCQRC,EAAS,MALtBC,YAAAC,aAMUC,KAAAC,MAAgB,GAChBD,KAAAE,KAAe,GACfF,KAAAG,IAAc,GACdH,KAAAI,MAAgB,GAChBJ,KAAAK,SAAmB,GAClBL,KAAAM,WAAqB,GACrBN,KAAAO,iBAA2B,GAC3BP,KAAAQ,cAAyB,MAElCV,sBACE,UACQW,EAAMC,KAAK,GAAGV,KAAKG,WAAY,CACnCC,MAAOJ,KAAKI,MACZC,SAAUL,KAAKK,WAEjBM,SAASC,OAAO,KAChB,MAAOX,GACP,MAAMY,MAAM,gCAIhBf,qBACE,UACQW,EAAMC,KAAK,GAAGV,KAAKG,qBAAsB,CAC7CC,MAAOJ,KAAKM,aAEdN,KAAKO,iBAAmB,GACxBP,KAAKQ,cAAgB,KAErB,MAAOP,GACPD,KAAKO,iBAAmBN,EAAMa,SAASC,KAAKC,QAC5ChB,KAAKQ,cAAgB,MACrB,MAAMK,MAAM,iCAIhBf,SACE,OACEmB,EAACC,EAAI,KAEAlB,KAAKE,OAAS,SAAWF,KAAKQ,eAC/BS,EAAA,MAAA,KACEA,EAAA,MAAA,KACEA,EAAA,MAAA,CAAKE,MAAM,0CACTF,EAAA,MAAA,CAAKE,MAAM,OAAOC,IAAI,mCAAmCC,IAAI,iBAC7DJ,EAAA,KAAA,CAAIE,MAAM,qDAAmD,oBAG/DF,EAAA,KAAA,CAAIE,MAAM,qEAAmE,WAG7EF,EAAA,IAAA,CAAGE,MAAM,kCAAgC,iDAI1CnB,KAAKO,kBAAoBU,EAAA,IAAA,CAAGE,MAAM,gFACjCF,EAAA,MAAA,CAAAK,cACc,OACZH,MAAM,gDACNI,KAAK,eACLC,QAAQ,YACRC,MAAM,8BAENR,EAAA,OAAA,CAAAS,YACY,UACVC,EAAE,mIAAkIC,YAC1H,aAGb5B,KAAKO,kBAERU,EAAA,aAAA,CAAYY,SAAWC,GAAM9B,KAAKM,WAAawB,EAAEC,OAAOC,MAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAErGlB,EAAA,MAAA,CAAKE,MAAM,QACTF,EAAA,eAAA,CAAcmB,aAAc,IAAMpC,KAAKqC,eAAgBC,MAAM,OAAOJ,KAAK,aAAW,cAIxFlC,KAAKE,OAAS,QAAUF,KAAKQ,gBAAkBS,EAAA,MAAA,KAC/CA,EAAA,MAAA,KACEA,EAAA,MAAA,CAAKE,MAAM,0CACTF,EAAA,MAAA,CAAKE,MAAM,OAAOC,IAAI,mCAAmCC,IAAI,iBAC7DJ,EAAA,KAAA,CAAIE,MAAM,qDAAmD,oBAG/DF,EAAA,KAAA,CAAIE,MAAM,qEAAmE,gBAG7EF,EAAA,IAAA,CAAGE,MAAM,kCAAgC,kDAI3CF,EAAA,OAAA,CAAME,MAAM,YAAYoB,OAAO,SAASN,KAAK,YAAYO,OAAO,QAC7DxC,KAAKC,OAASgB,EAAA,IAAA,CAAGE,MAAM,gFACtBF,EAAA,MAAA,CAAAK,cACc,OACZH,MAAM,gDACNI,KAAK,eACLC,QAAQ,YACRC,MAAM,8BAENR,EAAA,OAAA,CAAAS,YACY,UACVC,EAAE,mIAAkIC,YAC1H,aAER,oCAGRX,EAAA,aAAA,CAAYgB,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAElDlB,EAAA,MAAA,CAAKE,MAAM,sCACTF,EAAA,aAAA,CACEgB,KAAK,WACLC,KAAK,WACLC,YAAY,WACZM,IAAK,QAITxB,EAAA,MAAA,KACEA,EAAA,eAAA,CAAcqB,MAAM,OAAOJ,KAAK,aAAW,aAE7CjB,EAAA,MAAA,CAAKE,MAAM,8BACTF,EAAA,IAAA,CAAGyB,KAAK,gBAAgBvB,MAAM,iDAA+C","sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, Prop, h, State } from '@stencil/core';\nimport axios from 'axios';\n\n@Component({\n  tag: 'login-form',\n  styleUrl: 'login-form.css',\n  scoped: true,\n})\nexport class LoginForm {\n  @Prop() error: string = ''\n  @Prop() mode: string = ''\n  @Prop() url: string = ''\n  @Prop() email: string = ''\n  @Prop() password: string = ''\n  @State() visitEmail: string = ''\n  @State() visitSubmitError: string = ''\n  @State() emailSubmited: boolean = false;\n\n  async autoSubmitter() {\n    try {\n      await axios.post(`${this.url}login`, {\n        email: this.email,\n        password: this.password\n      })\n      location.assign('/')\n    } catch (error) {\n      throw Error(\"Form could not be submitted\")\n    }\n  }\n\n  async visitHandler() {\n    try {\n      await axios.post(`${this.url}api/users/visit`, {\n        email: this.visitEmail\n      })\n      this.visitSubmitError = ''\n      this.emailSubmited = true\n      // this.autoSubmitter()\n    } catch (error) {\n      this.visitSubmitError = error.response.data.message\n      this.emailSubmited = false\n      throw Error(\"Visit could not be submitted\")\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        {\n          (this.mode === 'demo' && !this.emailSubmited) &&\n          <div>\n            <div>\n              <div class=\"flex justify-center gap-4 items-center\">\n                <img class=\"h-24\" src=\"public/assets/images/neptune.png\" alt=\"neptune logo\" />\n                <h3 class=\"font-semibold text-3xl font-serif text-indigo-600\">Neptune Connect</h3>\n              </div>\n\n              <h2 class=\"mt-6 text-center text-2xl font-extrabold text-gray-600 font-serif\">\n                Welcome\n              </h2>\n              <p class=\"mt-2 text-center text-gray-400\">\n                Please enter your email to access demo mode!\n              </p>\n            </div>\n            {this.visitSubmitError && <p class=\"flex items-center justify-center pb-2 text-red-600 text-center font-semibold\">\n              <svg\n                aria-hidden=\"true\"\n                class=\"mx-2 w-5 h-5 text-gray-800 dark:text-gray-300\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                  clip-rule=\"evenodd\"\n                ></path>\n              </svg>\n              {this.visitSubmitError}\n            </p>}\n            <text-field onChange={(e) => this.visitEmail = e.target.value} name=\"email\" type=\"email\" placeholder=\"email\"></text-field>\n\n            <div class='mt-2'>\n              <plain-button clickHandler={() => this.visitHandler()} width=\"full\" type=\"contained\"> Visit </plain-button>\n            </div>\n          </div>\n        }\n        {(this.mode !== 'demo' || this.emailSubmited) && <div>\n          <div>\n            <div class=\"flex justify-center gap-4 items-center\">\n              <img class=\"h-24\" src=\"public/assets/images/neptune.png\" alt=\"neptune logo\" />\n              <h3 class=\"font-semibold text-3xl font-serif text-indigo-600\">Neptune Connect</h3>\n            </div>\n\n            <h2 class=\"mt-6 text-center text-2xl font-extrabold text-gray-600 font-serif\">\n              Welcome Back\n            </h2>\n            <p class=\"mt-2 text-center text-gray-400\">\n              Enter your credentials to access your account\n            </p>\n          </div>\n          <form class=\"space-y-2\" action=\"/login\" name=\"loginForm\" method=\"post\">\n            {this.error && <p class=\"flex items-center justify-center pb-2 text-red-600 text-center font-semibold\">\n              <svg\n                aria-hidden=\"true\"\n                class=\"mx-2 w-5 h-5 text-gray-800 dark:text-gray-300\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n                  clip-rule=\"evenodd\"\n                ></path>\n              </svg>\n              Username or password is wrong!!!\n            </p>}\n            <text-field name=\"email\" type=\"email\" placeholder=\"email\"></text-field>\n\n            <div class=\"mt-1 relative rounded-md shadow-sm\">\n              <text-field\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                eye={true}\n              ></text-field>\n            </div>\n\n            <div>\n              <plain-button width=\"full\" type=\"contained\"> submit </plain-button>\n            </div>\n            <div class=\"pt-2 flex flex-row-reverse\">\n              <a href=\"/users/forgot\" class=\"text-indigo-500 font-semibold hover:underline\">\n                Forgot Password\n              </a>\n            </div>\n          </form>\n        </div>}\n      </Host>\n    );\n  }\n\n}\n"]}
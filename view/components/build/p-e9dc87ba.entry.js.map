{"version":3,"sources":["src/components/common/fluid-container/fluid-container.tsx","src/components/common/plain-button/plain-button.css?tag=plain-button&encapsulation=scoped","src/components/common/plain-button/plain-button.tsx","src/components/resetPasswordPage/reset-component/reset-component.tsx","src/components/common/text-field/text-field.tsx"],"names":["FluidContainer","[object Object]","h","class","plainButtonCss","PlainButton","hostRef","this","addClass","type","width","color","hoverColor","disabledHandler","containedClass","textClass","outlinedClass","btnClassType","contained","outlined","text","onClick","clickHandler","disabled","ResetComponent","errorMessage","handleSubmit","e","preventDefault","data","FormData","target","password","get","toString","rePassword","length","match","comparePassword","axios","put","apiurl","email","then","res","status","Swal","fire","position","icon","showConfirmButton","timer","window","location","assign","url","catch","err","console","log","title","onSubmit","action","name","method","enctype","placeholder","eyeOff","xmlns","fill","viewBox","stroke","stroke-linecap","stroke-linejoin","stroke-width","d","eyeOn","TextField","showPassword","onChange","required","eye","changeView"],"mappings":"+IAMaA,EAAc,+BASzBC,SACE,OAEEC,EAAA,MAAA,CAAKC,MAAM,qCACTD,EAAA,OAAA,SCnBR,MAAME,EAAiB,wCCOVC,EAAW,MALxBJ,YAAAK,aAOUC,KAAAC,SAAW,GACXD,KAAAE,KAA0C,YAC1CF,KAAAG,MAAyB,OACzBH,KAAAI,MAAQ,aACRJ,KAAAK,WAAa,aAEbL,KAAAM,gBAAkB,MAG1BN,KAAAO,eAAiB,0MAA0MP,KAAKG,SAASH,KAAKC,WAC9OD,KAAAQ,UAAY,gEAAgER,KAAKI,2CAA2CJ,KAAKG,SAASH,KAAKC,uBAAuBD,KAAKK,aAC3KL,KAAAS,cAAgB,uOAEhBT,KAAAU,aAAe,CACbC,UAAWX,KAAKO,eAChBK,SAAUZ,KAAKS,cACfI,KAAMb,KAAKQ,WAGbd,SACE,OACEC,EAAA,SAAA,CAAQC,MAAOI,KAAKU,aAAaV,KAAKE,MAAOY,QAASd,KAAKe,aAAcC,SAAUhB,KAAKM,iBACtFX,EAAA,OAAA,uBCvBKsB,EAAc,MAJ3BvB,YAAAK,aAUWC,KAAAkB,aAAuB,GAQhClB,KAAAmB,aAAeC,IACbpB,KAAKkB,aAAe,GACpBE,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,QAC5BxB,KAAKyB,SAAWH,EAAKI,IAAI,YAAYC,WACrC3B,KAAK4B,WAAaN,EAAKI,IAAI,qBAAqBC,WAEhD,GAAI3B,KAAKyB,SAASI,OAAS,EAAG,CAC5B7B,KAAKkB,aAAe,iDACf,IAAKlB,KAAKyB,SAASK,MAAM,6BAA8B,CAC5D9B,KAAKkB,aAAe,sDACf,CACL,GAAIlB,KAAK+B,gBAAgB/B,KAAKyB,SAAUzB,KAAK4B,cAAgB,KAAM,CACjEI,EACGC,IAAIjC,KAAKkC,OAAQ,CAChBC,MAAOnC,KAAKmC,MACZV,SAAUzB,KAAKyB,WAEhBW,MAAKC,IACJ,GAAIA,EAAIC,SAAW,IAAK,CACtBC,EAAKC,KAAK,CACRC,SAAU,SACVC,KAAM,UACN7B,KAAM,iCACN8B,kBAAmB,MACnBC,MAAO,OAETC,OAAOC,SAASC,OAAO/C,KAAKgD,SAG/BC,OAAMC,IACLC,QAAQC,IAAIF,GACZX,EAAKC,KAAK,CACRE,KAAM,QACNW,MAAO,UACPxC,KAAM,iCAGP,CACLb,KAAKkB,aAAe,6BA7C1BxB,gBAAgB+B,EAAUG,GACxB,GAAIH,IAAaG,EAAY,CAC3B,OAAO,KAET,OAAO,MA8CTlC,SACE,OACEC,EAAA,UAAA,CAASC,MAAM,oCACbD,EAAA,MAAA,CAAKC,MAAM,6BACTD,EAAA,MAAA,CAAKC,MAAM,yCACTD,EAAA,KAAA,CAAIC,MAAM,sDAAoD,mBAC9DD,EAAA,IAAA,CAAGC,MAAM,0CAAwC,0DAEnDD,EAAA,MAAA,CAAKC,MAAM,gBACTD,EAAA,OAAA,CAAM2D,SAAUlC,GAAKpB,KAAKmB,aAAaC,GAAIxB,MAAM,YAAY2D,OAAO,SAASC,KAAK,cAAcC,OAAO,OAAOC,QAAQ,uBACpH/D,EAAA,MAAA,CAAKC,MAAM,uBACRI,KAAKkB,cAAgB,GAAKvB,EAAA,IAAA,CAAGC,MAAM,iFAAiFI,KAAKkB,cAAoB,KAC9IvB,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,aAAA,CAAY6D,KAAK,WAAWtD,KAAK,WAAWyD,YAAY,oBAE1DhE,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,aAAA,CAAY6D,KAAK,oBAAoBtD,KAAK,WAAWyD,YAAY,sBAEnEhE,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,eAAA,CAAcQ,MAAM,OAAOD,KAAK,aAAW,kBCnF7D,MAAM0D,EACJjE,EAAA,MAAA,CAAKkE,MAAM,6BAA6BjE,MAAM,UAAUkE,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAC7FrE,EAAA,OAAA,CAAAsE,iBACiB,QAAOC,kBACN,QAAOC,eACV,IACbC,EAAE,8SAKR,MAAMC,EACJ1E,EAAA,MAAA,CAAKkE,MAAM,6BAA6BjE,MAAM,UAAUkE,KAAK,OAAOC,QAAQ,YAAYC,OAAO,gBAC7FrE,EAAA,OAAA,CAAAsE,iBAAqB,QAAOC,kBAAiB,QAAOC,eAAc,IAAIC,EAAE,qCACxEzE,EAAA,OAAA,CAAAsE,iBACiB,QAAOC,kBACN,QAAOC,eACV,IACbC,EAAE,iIASKE,EAAS,MAJtB5E,YAAAK,aAOUC,KAAAE,KAAiD,OAMhDF,KAAAuE,aAAwB,MAEjC7E,aACEM,KAAKuE,cAAgBvE,KAAKuE,aAG5B7E,SACE,OACEC,EAAA,MAAA,CAAKC,MAAM,YACTD,EAAA,QAAA,CACEO,KAAMF,KAAKuE,aAAe,OAASvE,KAAKE,KACxCsE,SAAUpD,GAAKpB,KAAKwE,SAASpD,GAC7BxB,MAAO,sMAAsMI,KAAKC,YAClNuD,KAAMxD,KAAKwD,KACXG,YAAa3D,KAAK2D,YAClBc,SAAQ,OAETzE,KAAKE,OAAS,YAAcF,KAAK0E,KAChC/E,EAAA,MAAA,CAAKC,MAAM,qEACTD,EAAA,MAAA,CAAKC,MAAM,iBAAiBkB,QAAS,IAAMd,KAAK2E,eAC5C3E,KAAKuE,aAAeX,EAASS","sourcesContent":["import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'fluid-container',\n  scoped: true,\n})\nexport class FluidContainer {\n  // @Prop() breakpoint: 'xl' | 'lg' | 'md' = 'lg';\n\n  // screen = {\n  //   xl: 'max-w-screen-xl',\n  //   lg: 'max-w-screen-lg',\n  //   md: 'max-w-screen-md',\n  // };\n\n  render() {\n    return (\n      // <div class={`max-w-screen-${this.breakpoint} mx-auto`}>\n      <div class=\"max-w-screen-2xl mx-auto bg-white\">\n        <slot></slot>\n      </div>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'plain-button',\n  styleUrl: 'plain-button.css',\n  scoped: true,\n})\nexport class PlainButton {\n  // @Prop() btnLabel: string;\n  @Prop() addClass = '';\n  @Prop() type: 'contained' | 'outlined' | 'text' = 'contained';\n  @Prop() width: 'full' | 'auto' = 'auto';\n  @Prop() color = 'indigo-600';\n  @Prop() hoverColor = 'indigo-700';\n  @Prop() clickHandler: any;\n  @Prop() disabledHandler = false;\n\n  // outlinedClass = `py-2 px-4 border border-${this.color} text-sm font-medium rounded-md text-${this.color} bg-white hover:bg-${this.hoverColor} hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 capitalize w-${this.width} ${this.addClass}`;\n  containedClass = `py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 capitalize w-${this.width} ${this.addClass}`;\n  textClass = `py-2 px-4 border border-transparent text-sm font-medium text-${this.color}  focus:outline-none  capitalize w-${this.width} ${this.addClass} hover:text-${this.hoverColor}`;\n  outlinedClass = `mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500`;\n\n  btnClassType = {\n    contained: this.containedClass,\n    outlined: this.outlinedClass,\n    text: this.textClass,\n  };\n\n  render() {\n    return (\n      <button class={this.btnClassType[this.type]} onClick={this.clickHandler} disabled={this.disabledHandler}>\n        <slot />\n      </button>\n    );\n  }\n}\n","import { Component, h, State, Prop } from '@stencil/core';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\n@Component({\n  tag: 'reset-component',\n  scoped: true,\n})\nexport class ResetComponent {\n  @Prop() url: string;\n  @Prop() apiurl: string;\n  @Prop() email: string;\n  @State() password: string;\n  @State() rePassword: string;\n  @State() errorMessage: string = '';\n\n  comparePassword(password, rePassword) {\n    if (password === rePassword) {\n      return true;\n    }\n    return false;\n  }\n  handleSubmit = e => {\n    this.errorMessage = '';\n    e.preventDefault();\n    const data = new FormData(e.target);\n    this.password = data.get('password').toString();\n    this.rePassword = data.get('confirmedPassword').toString();\n\n    if (this.password.length < 7) {\n      this.errorMessage = 'Password length is less than 7 characters';\n    } else if (!this.password.match(/([!,%,&,@,#,$,^,*,?,_,~])/)) {\n      this.errorMessage = 'Password does not contain any special character';\n    } else {\n      if (this.comparePassword(this.password, this.rePassword) === true) {\n        axios\n          .put(this.apiurl, {\n            email: this.email,\n            password: this.password,\n          })\n          .then(res => {\n            if (res.status === 200) {\n              Swal.fire({\n                position: 'center',\n                icon: 'success',\n                text: 'Password changed successfully!',\n                showConfirmButton: false,\n                timer: 1500,\n              });\n              window.location.assign(this.url);\n            }\n          })\n          .catch(err => {\n            console.log(err);\n            Swal.fire({\n              icon: 'error',\n              title: 'Oops...',\n              text: 'Something went wrong!',\n            });\n          });\n      } else {\n        this.errorMessage = 'Password does not match';\n      }\n    }\n  };\n\n  render() {\n    return (\n      <section class=\"text-gray-600 body-font relative\">\n        <div class=\"w-full px-5 py-14 mx-auto\">\n          <div class=\"flex flex-col text-center w-full mb-8\">\n            <h1 class=\"sm:text-2xl font-semibold title-font text-gray-600\">Update Password</h1>\n            <p class=\"w-96 mx-auto leading-relaxed text-base\">Please fill in the form below to continue signing up.</p>\n          </div>\n          <div class=\"w-96 mx-auto\">\n            <form onSubmit={e => this.handleSubmit(e)} class=\"space-y-3\" action=\"/users\" name=\"invite-form\" method=\"post\" enctype=\"multipart/form-data\">\n              <div class=\"flex flex-wrap -m-2\">\n                {this.errorMessage != '' ? <p class=\"px-3 py-2 bg-red-200 text-red-800 border-l-4 border-red-600 w-full -mt-4 mb-6\">{this.errorMessage}</p> : null}\n                <div class=\"pt-3 w-full\">\n                  <text-field name=\"password\" type=\"password\" placeholder=\"Enter password\"></text-field>\n                </div>\n                <div class=\"pt-3 w-full\">\n                  <text-field name=\"confirmedPassword\" type=\"password\" placeholder=\"Confirm password\"></text-field>\n                </div>\n                <div class=\"pt-3 w-full\">\n                  <plain-button width=\"full\" type=\"contained\">\n                    update\n                  </plain-button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import { Component, h, State, Prop } from '@stencil/core';\n\nconst eyeOff = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.88 9.88l-3.29-3.29m7.532 7.532l3.29 3.29M3 3l3.59 3.59m0 0A9.953 9.953 0 0112 5c4.478 0 8.268 2.943 9.543 7a10.025 10.025 0 01-4.132 5.411m0 0L21 21\"\n    />\n  </svg>\n);\n\nconst eyeOn = (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n    <path\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n      stroke-width=\"2\"\n      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\n    />\n  </svg>\n);\n\n@Component({\n  tag: 'text-field',\n  scoped: true,\n})\nexport class TextField {\n  @Prop() name: string;\n  @Prop() addClass: string;\n  @Prop() type: 'email' | 'password' | 'text' | 'search' = 'text';\n  @Prop() placeholder: string;\n  @Prop() onChange: any;\n  @Prop() onClick: any;\n  @Prop() eye: boolean;\n\n  @State() showPassword: boolean = false;\n\n  changeView() {\n    this.showPassword = !this.showPassword;\n  }\n\n  render() {\n    return (\n      <div class=\"relative\">\n        <input\n          type={this.showPassword ? 'text' : this.type}\n          onChange={e => this.onChange(e)}\n          class={`appearance-none block  px-3 py-2 border-2 border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 text-sm w-full ${this.addClass} `}\n          name={this.name}\n          placeholder={this.placeholder}\n          required\n        />\n        {this.type === 'password' && this.eye && (\n          <div class=\"absolute z-10 inset-y-0 right-3 flex items-center text-indigo-500\">\n            <div class=\"cursor-pointer\" onClick={() => this.changeView()}>\n              {!this.showPassword ? eyeOff : eyeOn}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"]}
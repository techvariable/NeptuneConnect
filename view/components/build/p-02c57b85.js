const e=["editor","settings","permissions","users","logs","profile","*"];function r(r){try{const t=JSON.parse(r);const n=Object.keys(t);if(n.length===0){throw Error("No keys present in the json")}n.forEach((r=>{if(!e.includes(r)){throw Error(`${r} key is not a valid permission key. Following are the valid permissions: ${e.join(", ")}.`)}const n=t[r];if(n["*"]==undefined){let e=["read","write","delete","update"];for(let t of e){if(n[t]===undefined)throw Error(`${t} property not present in ${r}`)}}}))}catch(e){return{isValid:false,error:e.message}}return{isValid:true,error:null}}function t(e,r){const t=/(:[a-zA-Z])\w+/g;const n=e.match(t);try{if(Array.isArray(n)){const e=JSON.parse(r);const t=Object.keys(e);n.forEach((e=>{let r=e.split(":").pop();if(!t.includes(r)){throw Error(`${r} key not present in the json`)}}))}}catch(e){console.log(e);return{isValid:false,error:e.message}}return{isValid:true,error:null}}function n(e){return JSON.stringify(e,undefined,4)}function i(e,r){if(!(e.find((e=>"*"in e&&e["*"]["*"]))!=null||e.find((e=>"*"in e&&e["*"][r.permission]))!=null||e.some((e=>{if(!Array.isArray(r.name)){return r.name in e&&e[r.name][r.permission]}else{return r.name.some((t=>t in e&&e[t][r.permission]))}})))){return false}return true}function s(e){const r=["editor","settings","permissions","users","logs","profile","*"];const t={};r.forEach((e=>{t[e]={read:false,write:false,delete:false,update:false}}));e.forEach((n=>{const s=Object.keys(n);s.forEach((s=>{if(s==="*"){r.forEach((r=>{if(n[s]["*"]!==undefined){t[r]={read:n[s]["*"],write:n[s]["*"],update:n[s]["*"],delete:n[s]["*"]}}else{t[r]={read:i(e,{name:s,permission:"read"}),write:i(e,{name:s,permission:"write"}),update:i(e,{name:s,permission:"update"}),delete:i(e,{name:s,permission:"delete"})}}}))}else{if(n[s]["*"]!==undefined){t[s]={read:n[s]["*"],write:n[s]["*"],update:n[s]["*"],delete:n[s]["*"]}}else{t[s]={read:i(e,{name:s,permission:"read"}),write:i(e,{name:s,permission:"write"}),update:i(e,{name:s,permission:"update"}),delete:i(e,{name:s,permission:"delete"})}}}}))}));delete t["*"];return t}function o(e){const r=new Set;e.forEach((e=>{Object.keys(e).forEach((e=>{r.add(e)}))}));return{columns:[...r],data:e.map((e=>[...r].map((r=>e[r]||""))))}}export{r as a,s as c,n as f,i as h,t as i,o as j};
//# sourceMappingURL=p-02c57b85.js.map
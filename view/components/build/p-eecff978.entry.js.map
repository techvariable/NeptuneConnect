{"version":3,"sources":["src/components/profilePage/profile-component/profile-component.css?tag=profile-component&encapsulation=scoped","src/components/profilePage/profile-component/profile-component.tsx"],"names":["profileComponentCss","ProfileComponent","[object Object]","hostRef","this","parsedPermissions","password","repassword","name","error","user","JSON","parse","stringifieduser","permissions","e","preventDefault","length","match","axios","put","url","email","Swal","fire","position","icon","text","showConfirmButton","timer","post","window","location","reload","title","response","data","message","target","value","h","Host","class","onSubmit","handleSubmit","onInput","event","nameChangeHandler","id","type","placeholder","disabled","hasAccess","permission","passwordHandler","repasswordHandler","customClass"],"mappings":"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","sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, h, Prop, State } from '@stencil/core';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { hasAccess } from '../../../utils/utils';\n\n@Component({\n  tag: 'profile-component',\n  styleUrl: 'profile-component.css',\n  scoped: true,\n})\nexport class ProfileComponent {\n  @Prop() stringifieduser: string;\n  @Prop() url: string;\n  @Prop() permissions: string;\n\n  @State() parsedPermissions: [] = [];\n  @State() user: any;\n  @State() password: string = '';\n  @State() repassword: string = '';\n  @State() name: string = '';\n  @State() error: any = null;\n\n  componentWillLoad() {\n    this.user = JSON.parse(this.stringifieduser);\n    this.name = this.user.name;\n    this.parsedPermissions = JSON.parse(this.permissions || '[]');\n  }\n\n  async handleSubmit(e) {\n    this.error = null;\n    e.preventDefault();\n    if (this.name === '') {\n      this.error = 'User name is empty';\n    } else if (this.password.length < 7) {\n      this.error = 'Password length is less than 7 characters';\n    } else if (!this.password.match(/([!,%,&,@,#,$,^,*,?,_,~])/)) {\n      this.error = 'Password does not contain any special character';\n    } else if (this.password !== this.repassword) {\n      this.error = 'Password does not match with re-entered password';\n    } else {\n      try {\n        await axios.put(`${this.url}api/users/password`, {\n          name: this.name,\n          email: this.user.email,\n          password: this.password,\n        });\n        this.password = '';\n        this.name = '';\n        this.error = '';\n        Swal.fire({\n          position: 'center',\n          icon: 'success',\n          text: 'User credentials updated successfully!',\n          showConfirmButton: false,\n          timer: 1500,\n        });\n        await axios.post(`${this.url}logout`);\n        window.location.reload();\n      } catch (error) {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: error.response.data.message,\n        });\n      }\n    }\n  }\n  passwordHandler(e) {\n    this.password = e.target.value;\n  }\n  repasswordHandler(e) {\n    this.repassword = e.target.value;\n  }\n  nameChangeHandler(e) {\n    this.name = e.target.value;\n  }\n\n  render() {\n    return (\n      <Host class=\"rounded-lg w-auto bg-gray-100 shadow-gray-600 py-2 px-3 space-y-2 gap-4\">\n        <form onSubmit={e => this.handleSubmit(e)} class=\"w-full\">\n          <div class=\"flex flex-wrap -mx-3 mb-3\">\n            <div class=\"w-full px-3\">\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">Name</label>\n              <input\n                onInput={event => this.nameChangeHandler(event)}\n                class=\"appearance-none block w-full bg-white text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-user-name\"\n                type=\"text\"\n                placeholder=\"\"\n                value={this.name}\n                disabled={!hasAccess(this.parsedPermissions, { name: 'myprofile', permission: 'update' })}\n              />\n              <p class=\"text-gray-600 text-xs italic\">Enter updated name</p>\n            </div>\n          </div>\n          <div class=\"flex flex-wrap -mx-3 mb-3\">\n            <div class=\"w-full px-3 mb-6 md:mb-0\">\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">Email</label>\n              <input\n                class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-400 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white\"\n                disabled\n                id=\"grid-email\"\n                type=\"text\"\n                value={this.user.email}\n                placeholder=\"Enter email\"\n              />\n            </div>\n          </div>\n          <div class=\"flex flex-wrap -mx-3 mb-3\">\n            <div class=\"w-full px-3\">\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">Password</label>\n              <input\n                onInput={e => this.passwordHandler(e)}\n                class=\"appearance-none block w-full bg-white text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-password\"\n                type=\"password\"\n                placeholder=\"******************\"\n                value={this.password}\n                disabled={!hasAccess(this.parsedPermissions, { name: 'myprofile', permission: 'update' })}\n              />\n              <p class=\"text-gray-600 text-xs italic\">Enter updated password</p>\n            </div>\n          </div>\n          <div class=\"flex flex-wrap -mx-3 mb-2\">\n            <div class=\"w-full px-3\">\n              <label class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">Re-enter Password</label>\n              <input\n                onInput={e => this.repasswordHandler(e)}\n                class=\"appearance-none block w-full bg-white text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n                id=\"grid-password\"\n                type=\"password\"\n                placeholder=\"******************\"\n                value={this.repassword}\n                disabled={!hasAccess(this.parsedPermissions, { name: 'myprofile', permission: 'update' })}\n              />\n              <p class=\"text-gray-600 text-xs italic\">Re-enter the password</p>\n            </div>\n          </div>\n          <div class=\"flex flex-row-reverse -mx-3 mb-4 \">\n            <icon-label-submit-button customClass=\"mx-4\" type=\"submit\" disabled={!hasAccess(this.parsedPermissions, { name: 'myprofile', permission: 'update' })}>\n              Update\n            </icon-label-submit-button>\n            {this.error ? <p class=\"rounded-lg mx-4 my-2 px-3 py-2 bg-red-200 text-red-800 border-l-4 border-red-600 w-full\">{this.error}</p> : null}\n          </div>\n        </form>\n      </Host>\n    );\n  }\n}\n"]}
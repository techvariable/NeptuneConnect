{"version":3,"sources":["src/components/settingsPage/basic-settings/basic-settings.css?tag=basic-settings&encapsulation=scoped","src/components/settingsPage/basic-settings/basic-settings.tsx"],"names":["basicSettingsCss","BasicSettings","[object Object]","hostRef","this","darkMode","isEditorAccordianOpen","isOtherAccordianOpen","accordianState","name","currentState","editorSettingsState","themesArray","label","type","dropDownOpen","localStorage","getItem","options","isLineNumberEnabled","isHigglightActiveLine","isAutoCloseBracket","ishighlightSelectionMatches","isbracketMatchingEnabled","generalSettingsState","generalTheme","editorStateToggleHandler","editorToggleKey","editorState","Object","assign","setItem","viewClasses","true","false","accordianClasses","firstHeading","midHeading","lastHeading","midDiv","lastDiv","fetchDynamicStyle","keyState","item","generalState","selectedOption","key","settingsState","generalSettingsDropDownHandler","editorSettingsDropDownHandler","theme","style","applyDynamicStyle","css","styleTag","document","createElement","dynamicStyleCss","createTextNode","appendChild","header","getElementsByTagName","h","Host","class","id","data-accordion","data-accordion-target","aria-expanded","aria-controls","keys","map","zIndex","onClick","data-dropdown-toggle","toUpperCase","aria-hidden","fill","stroke","viewBox","xmlns","stroke-linecap","stroke-linejoin","stroke-width","d","data-accordion-icon","fill-rule","clip-rule","aria-labelledby","generalSettingsSelectHandler","accordian","index","length","accordianHandler","selectHandler","isSelected","toggleButtonHandler"],"mappings":"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","sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'basic-settings',\n  styleUrl: 'basic-settings.css',\n  scoped: true,\n})\nexport class BasicSettings {\n  @State() darkMode: boolean = false;\n  @State() isEditorAccordianOpen: boolean = false;\n  @State() isOtherAccordianOpen: boolean = false;\n  @State() accordianState: Object = {\n    isEditorAccordianOpen: {\n      name: 'Editor',\n      currentState: false,\n    },\n  };\n\n  @State() editorSettingsState: Object = {\n    themesArray: {\n      label: 'Editor Theme',\n      type: 'dropDown',\n      dropDownOpen: false,\n      currentState: localStorage.getItem('themesArray') || 'light',\n      options: ['light', 'dark'],\n    },\n    isLineNumberEnabled: {\n      label: 'Line Number',\n      type: 'toggle',\n      currentState: localStorage.getItem('isLineNumberEnabled') || false,\n    },\n    isHigglightActiveLine: {\n      label: 'Highlight Active Line',\n      type: 'toggle',\n      currentState: localStorage.getItem('isHigglightActiveLine') || false,\n    },\n    isAutoCloseBracket: {\n      label: 'Auto Close Brackets',\n      type: 'toggle',\n      currentState: localStorage.getItem('isAutoCloseBracket') || false,\n    },\n    ishighlightSelectionMatches: {\n      label: 'Highlight Selection Matches',\n      type: 'toggle',\n      currentState: localStorage.getItem('highlightSelectionMatches') || false,\n    },\n    isbracketMatchingEnabled: {\n      label: 'Bracket Matching',\n      type: 'toggle',\n      currentState: localStorage.getItem('isbracketMatchingEnabled') || false,\n    },\n  };\n  @State() generalSettingsState: Object = {\n    generalTheme: {\n      label: 'Neptune Theme',\n      type: 'dropDown',\n      dropDownOpen: false,\n      currentState: localStorage.getItem('generalTheme') || 'light',\n      options: ['light', 'dark-green', 'dark-night', 'dark-violet', 'dark-orange', 'dark-candy', 'light-blue', 'light-orange', 'light-green'],\n    },\n  };\n  componentWillLoad() {\n    this.fetchDynamicStyle();\n  }\n\n  accordianHandler(keyState) {\n    const accordianState = { ...this.accordianState };\n    accordianState[keyState]['currentState'] = !this.accordianState[keyState]['currentState'];\n    this.accordianState = accordianState;\n  }\n\n  editorStateToggleHandler = editorToggleKey => {\n    const editorState = { ...this.editorSettingsState };\n    editorState[editorToggleKey]['currentState'] = !editorState[editorToggleKey]['currentState'];\n    localStorage.setItem(editorToggleKey, editorState[editorToggleKey]['currentState']);\n    this.editorSettingsState = editorState;\n  };\n\n  editorSettingsDropDownHandler(item) {\n    const editorState = { ...this.editorSettingsState };\n    editorState[item]['dropDownOpen'] = !this.editorSettingsState[item]['dropDownOpen'];\n    this.editorSettingsState = editorState;\n  }\n  generalSettingsDropDownHandler(item) {\n    const generalState = { ...this.generalSettingsState };\n    generalState[item]['dropDownOpen'] = !this.generalSettingsState[item]['dropDownOpen'];\n    this.generalSettingsState = generalState;\n  }\n  generalSettingsSelectHandler(selectedOption, key) {\n    const settingsState = { ...this.generalSettingsState };\n    settingsState[key]['currentState'] = selectedOption;\n    localStorage.setItem(key, settingsState[key]['currentState']);\n    this.generalSettingsDropDownHandler(key);\n    this.generalSettingsState = settingsState;\n    this.fetchDynamicStyle();\n  }\n  selectHandler(selectedOption, key) {\n    const editorState = { ...this.editorSettingsState };\n    editorState[key]['currentState'] = selectedOption;\n    localStorage.setItem(key, editorState[key]['currentState']);\n    this.editorSettingsDropDownHandler(key);\n    this.editorSettingsState = editorState;\n  }\n  fetchDynamicStyle() {\n    const theme = this.generalSettingsState['generalTheme']['currentState'];\n    let style = '';\n    switch (theme) {\n      case 'dark-green':\n        style = 'filter:invert(.9) hue-rotate(30deg)';\n        break;\n      case 'dark-night':\n        style = 'filter:invert(.9) hue-rotate(120deg)';\n        break;\n      case 'dark-violet':\n        style = 'filter:invert(.9) hue-rotate(220deg)';\n        break;\n      case 'dark-orange':\n        style = 'filter:invert(.9) hue-rotate(320deg)';\n        break;\n      case 'dark-candy':\n        style = 'filter:invert(.9) hue-rotate(360deg)';\n        break;\n      case 'light-blue':\n        style = 'filter: hue-rotate(330deg)';\n        break;\n      case 'light-orange':\n        style = 'filter: hue-rotate(100deg)';\n        break;\n      case 'light-green':\n        style = 'filter: hue-rotate(240deg)';\n        break;\n      default:\n        style = 'filter:invert(0) hue-rotate(0deg)';\n        break;\n    }\n    this.applyDynamicStyle(`\n    html{\n      ${style}\n    } \n    `);\n  }\n  applyDynamicStyle(css) {\n    const styleTag = document.createElement('style');\n    const dynamicStyleCss = document.createTextNode(css);\n    styleTag.appendChild(dynamicStyleCss);\n    const header = document.getElementsByTagName('head')[0];\n    header.appendChild(styleTag);\n  }\n\n  viewClasses = {\n    true: '',\n    false: 'hidden',\n  };\n\n  accordianClasses = {\n    firstHeading:\n      'flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-b-0 border-gray-200 rounded-t-xl focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800',\n    midHeading:\n      'flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-b-0 border-gray-200 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800',\n    lastHeading:\n      'flex items-center justify-between w-full p-5 font-medium text-left text-gray-500 border border-gray-200 focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-800 dark:border-gray-700 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-800',\n    midDiv: 'p-5 pb-0 pl-8 border border-b-0 border-gray-200 dark:border-gray-700 dark:bg-gray-900 divide-y',\n    lastDiv: 'p-5 border border-t-0 border-gray-200 dark:border-gray-700 divide-y divide-gray-100',\n  };\n\n  render() {\n    return (\n      <Host>\n        <div class=\"w-full shadow-md sm:rounded-lg p-4 my-2\">\n          <div id=\"accordion-collapse\" data-accordion=\"collapse\">\n            <h2 id=\"accordion-collapse-heading-1\">\n              <div class={this.accordianClasses.firstHeading} data-accordion-target=\"#accordion-collapse-body-1\" aria-expanded=\"true\" aria-controls=\"accordion-collapse-body-1\">\n                {Object.keys(this.generalSettingsState).map(item => {\n                  return (\n                    <div class=\"flex justify-between items-center w-full\">\n                      <h1 class=\"font-normal text-left text-gray-500 dark:text-gray-400\">Neptune Theme</h1>\n                      <div style={{ zIndex: '5' }} class=\"h-11 w-44\">\n                        <button\n                          onClick={() => this.generalSettingsDropDownHandler(item)}\n                          id=\"dropdownDefaultButton\"\n                          data-dropdown-toggle=\"dropdown\"\n                          class=\"w-full justify-between text-md text-white bg-gray-600 hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800\"\n                          type=\"button\"\n                        >\n                          <div class=\"overflow-hidden overflow-ellipsis\">{this.generalSettingsState[item].currentState.toUpperCase() || 'Themes'}</div>\n                          {this.generalSettingsState[item]['dropDownOpen'] ? (\n                            <svg class=\"w-4 h-4 ml-2\" aria-hidden=\"true\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                            </svg>\n                          ) : (\n                            <svg data-accordion-icon class=\"w-4 h-4 shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                              <path\n                                fill-rule=\"evenodd\"\n                                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                clip-rule=\"evenodd\"\n                              ></path>\n                            </svg>\n                          )}\n                        </button>\n                        <div\n                          id=\"dropdown\"\n                          style={{ zIndex: '5' }}\n                          class={` max-h-80 overflow-auto custom-scrollbar bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 ${\n                            this.viewClasses[`${this.generalSettingsState[item]['dropDownOpen']}`]\n                          }`}\n                        >\n                          <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownDefaultButton\">\n                            {this.generalSettingsState[item]['options'].map(selectedOption => {\n                              return (\n                                <li>\n                                  <button\n                                    onClick={() => this.generalSettingsSelectHandler(selectedOption, item)}\n                                    class=\"w-full font-medium block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white overflow-hidden overflow-ellipsis\"\n                                  >\n                                    {selectedOption.toUpperCase()}\n                                  </button>\n                                </li>\n                              );\n                            })}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </h2>\n            {Object.keys(this.accordianState).map((accordian, index) => {\n              return (\n                <div>\n                  <h2 id=\"accordion-collapse-heading-2\">\n                    <button\n                      type=\"button\"\n                      class={index === Object.keys(this.accordianState).length ? this.accordianClasses.midHeading : this.accordianClasses.lastHeading}\n                      data-accordion-target=\"#accordion-collapse-body-1\"\n                      aria-expanded=\"true\"\n                      aria-controls=\"accordion-collapse-body-1\"\n                      onClick={() => this.accordianHandler(accordian)}\n                    >\n                      <span>{this.accordianState[accordian]['name']}</span>\n                      {this.accordianState[accordian]['currentState'] ? (\n                        <svg data-accordion-icon class=\"w-6 h-6 rotate-180 shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                            fill-rule=\"evenodd\"\n                            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                            clip-rule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      ) : (\n                        <svg data-accordion-icon class=\"w-6 h-6 shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                          <path\n                            fill-rule=\"evenodd\"\n                            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                            clip-rule=\"evenodd\"\n                          ></path>\n                        </svg>\n                      )}\n                    </button>\n                  </h2>\n                  <div id=\"accordion-collapse-body-2\" class={this.viewClasses[`${this.accordianState[accordian]['currentState']}`]} aria-labelledby=\"accordion-collapse-heading-1\">\n                    <div class={index === Object.keys(this.accordianState).length - 1 ? this.accordianClasses.lastDiv : this.accordianClasses.midDiv}>\n                      {this.accordianState[accordian]['name'] === 'Editor' &&\n                        Object.keys(this.editorSettingsState).map(item => {\n                          return (\n                            <div>\n                              {this.editorSettingsState[item]['type'] === 'dropDown' && (\n                                <div class=\"pb-4 flex justify-between items-center\">\n                                  <h1 class=\"font-normal text-left text-gray-500 dark:text-gray-400\">{this.editorSettingsState[item]['label']}</h1>\n                                  <div style={{ zIndex: '1' }} class=\"h-11 w-44\">\n                                    <button\n                                      onClick={() => this.editorSettingsDropDownHandler(item)}\n                                      id=\"dropdownDefaultButton\"\n                                      data-dropdown-toggle=\"dropdown\"\n                                      class=\"w-full justify-between text-md text-white bg-gray-600 hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-300 font-medium rounded-lg text-sm px-4 py-2.5 text-center inline-flex items-center dark:bg-gray-600 dark:hover:bg-gray-700 dark:focus:ring-gray-800\"\n                                      type=\"button\"\n                                    >\n                                      <div class=\"overflow-hidden overflow-ellipsis\">{this.editorSettingsState[item].currentState.toUpperCase() || 'Themes'}</div>\n                                      {this.editorSettingsState[item]['dropDownOpen'] ? (\n                                        <svg class=\"w-4 h-4 ml-2\" aria-hidden=\"true\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                                        </svg>\n                                      ) : (\n                                        <svg data-accordion-icon class=\"w-4 h-4 shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n                                          <path\n                                            fill-rule=\"evenodd\"\n                                            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                            clip-rule=\"evenodd\"\n                                          ></path>\n                                        </svg>\n                                      )}\n                                    </button>\n                                    <div\n                                      id=\"dropdown\"\n                                      style={{ zIndex: '1' }}\n                                      class={`z-50 max-h-80 overflow-auto custom-scrollbar bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-700 ${\n                                        this.viewClasses[`${this.editorSettingsState[item]['dropDownOpen']}`]\n                                      }`}\n                                    >\n                                      <ul class=\"py-2 text-sm text-gray-700 dark:text-gray-200\" aria-labelledby=\"dropdownDefaultButton\">\n                                        {this.editorSettingsState[item]['options'].map(selectedOption => {\n                                          return (\n                                            <li>\n                                              <button\n                                                onClick={() => this.selectHandler(selectedOption, item)}\n                                                class=\"w-full font-medium block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white overflow-hidden overflow-ellipsis\"\n                                              >\n                                                {selectedOption.toUpperCase()}\n                                              </button>\n                                            </li>\n                                          );\n                                        })}\n                                      </ul>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                              {this.editorSettingsState[item]['type'] === 'toggle' && (\n                                <div class=\"py-4 flex justify-between items-center\">\n                                  <h1 class=\"font-normal text-left text-gray-500 dark:text-gray-400 \">{this.editorSettingsState[item]['label']}</h1>\n                                  <toggle-button\n                                    isSelected={this.editorSettingsState[item]['currentState']}\n                                    toggleButtonHandler={() => this.editorStateToggleHandler(item)}\n                                  ></toggle-button>\n                                </div>\n                              )}\n                            </div>\n                          );\n                        })}\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}
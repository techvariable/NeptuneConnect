{"version":3,"sources":["src/components/common/multi-select-custom/multi-select-custom.tsx"],"names":["MultiSelectCustom","[object Object]","hostRef","this","dropDownState","e","removeValue","target","parentElement","innerText","selected","filter","value","includes","push","searchText","arr","roles","console","log","h","class","map","item","onClick","removeChip","xmlns","width","height","fill","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","x1","y1","x2","y2","onKeyDown","searchValue","placeholder","dropDownClick","points","itemOnClick"],"mappings":"+CAMaA,EAAiB,MAJ9BC,YAAAC,aAKWC,KAAAC,cAAyB,MAIlCH,gBACEE,KAAKC,eAAiBD,KAAKC,cAE7BH,WAAWI,GACT,MAAMC,EAAcD,EAAEE,OAAOC,cAAcA,cAAcA,cAAcC,UACvEN,KAAKO,SAAWP,KAAKO,SAASC,QAAOC,GAASN,IAAgBM,IAEhEX,YAAYI,GACV,IAAKF,KAAKO,SAASG,SAASR,EAAEE,OAAOE,WAAY,CAC/CN,KAAKO,SAASI,KAAKT,EAAEE,OAAOE,WAE9BN,KAAKC,cAAgB,MAEvBH,YAAYI,GACV,MAAMU,EAAaV,EAAEE,OAAOK,MAC5B,MAAMI,EAAMb,KAAKc,MAAMN,QAAOC,GAASA,EAAMC,SAASE,KACtDG,QAAQC,IAAIH,GAGdf,SACE,OACEmB,EAAA,MAAA,CAAKC,MAAM,qEACTD,EAAA,MAAA,CAAKC,MAAM,2DACTD,EAAA,MAAA,CAAKC,MAAM,eACTD,EAAA,MAAA,CAAKC,MAAM,uCAETD,EAAA,MAAA,CAAKC,MAAM,0BACTD,EAAA,MAAA,CAAKC,MAAM,6FACTD,EAAA,MAAA,CAAKC,MAAM,8CACRlB,KAAKO,SAASY,KAAIC,GACjBH,EAAA,MAAA,CAAKC,MAAM,6HACTD,EAAA,MAAA,CAAKC,MAAM,4DAA4DE,GACvEH,EAAA,MAAA,CAAKC,MAAM,mCACTD,EAAA,MAAA,CAAKI,QAASnB,GAAKF,KAAKsB,WAAWpB,IACjCe,EAAA,MAAA,CACEM,MAAM,6BACNC,MAAM,OACNC,OAAO,OACPC,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAcC,eACR,IAAGC,iBACD,QAAOC,kBACN,QAChBb,MAAM,kFAEND,EAAA,OAAA,CAAMe,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,OAC/BlB,EAAA,OAAA,CAAMe,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,aAQzClB,EAAA,MAAA,CAAKC,MAAM,IACTD,EAAA,QAAA,CACEmB,UAAWlC,IACTF,KAAKqC,YAAYnC,IAEnBoC,YAAY,yBACZpB,MAAM,uFAKZD,EAAA,MAAA,CAAKC,MAAM,8FACTD,EAAA,SAAA,CAAQC,MAAM,uEAAuEG,QAAS,IAAMrB,KAAKuC,iBACvGtB,EAAA,MAAA,CACEM,MAAM,6BACNC,MAAM,OACNC,OAAO,OACPC,KAAK,OACLC,QAAQ,YACRC,OAAO,eAAcC,eACR,IAAGC,iBACD,QAAOC,kBACN,QAChBb,MAAM,sCAEND,EAAA,WAAA,CAAUuB,OAAO,yBAO1BxC,KAAKC,eACJgB,EAAA,MAAA,CAAKC,MAAM,0GACTD,EAAA,MAAA,CAAKC,MAAM,UACRlB,KAAKc,MAAMK,KAAIC,GACdH,EAAA,MAAA,CAAKI,QAASnB,GAAKF,KAAKyC,YAAYvC,GAAIgB,MAAM,oEAC5CD,EAAA,MAAA,CAAKC,MAAM,4FACTD,EAAA,MAAA,CAAKC,MAAM,4BACTD,EAAA,MAAA,CAAKC,MAAM,yBAAyBE","sourcesContent":["import { Component, h, State, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'multi-select-custom',\n  scoped: true,\n})\nexport class MultiSelectCustom {\n  @State() dropDownState: boolean = false;\n  @Prop() selected: string[];\n  @Prop() roles: string[];\n\n  dropDownClick() {\n    this.dropDownState = !this.dropDownState;\n  }\n  removeChip(e) {\n    const removeValue = e.target.parentElement.parentElement.parentElement.innerText;\n    this.selected = this.selected.filter(value => removeValue !== value);\n  }\n  itemOnClick(e) {\n    if (!this.selected.includes(e.target.innerText)) {\n      this.selected.push(e.target.innerText);\n    }\n    this.dropDownState = false;\n  }\n  searchValue(e) {\n    const searchText = e.target.value;\n    const arr = this.roles.filter(value => value.includes(searchText));\n    console.log(arr);\n  }\n\n  render() {\n    return (\n      <div class=\"bg-gray-500 border border-gray-300 shadow-gray-300  p-3 space-y-2\">\n        <div class=\"w-full md:w-1/2 flex flex-col items-center h-64 mx-auto\">\n          <div class=\"w-full px-4\">\n            <div class=\"flex flex-col items-center relative\">\n              {/* select area */}\n              <div class=\"w-full  svelte-1l8159u\">\n                <div class=\"my-2 p-1 px-2 flex border justify-between border-gray-200 bg-white rounded svelte-1l8159u\">\n                  <div class=\"flex flex-1 py-1 flex-wrap justify-between\">\n                    {this.selected.map(item => (\n                      <div class=\"flex justify-center items-center m-1 font-medium py-1 px-2 rounded-full text-teal-700 bg-teal-100 border border-teal-300 \">\n                        <div class=\"text-xs font-normal leading-none max-w-full flex-initial\">{item}</div>\n                        <div class=\"flex flex-auto flex-row-reverse\">\n                          <div onClick={e => this.removeChip(e)}>\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"100%\"\n                              height=\"100%\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                              stroke=\"currentColor\"\n                              stroke-width=\"2\"\n                              stroke-linecap=\"round\"\n                              stroke-linejoin=\"round\"\n                              class=\"feather feather-x cursor-pointer hover:text-teal-400 rounded-full w-4 h-4 ml-2\"\n                            >\n                              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n                              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n                            </svg>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n\n                    {/* input for select */}\n                    <div class=\"\">\n                      <input\n                        onKeyDown={e => {\n                          this.searchValue(e);\n                        }}\n                        placeholder=\"Enter values to search\"\n                        class=\"bg-transparent p-1 px-2 appearance-none outline-none h-full w-full text-gray-800\"\n                      />\n                    </div>\n                  </div>\n                  {/* drop down button */}\n                  <div class=\"text-gray-300 w-8 py-1 pl-2 pr-1 border-l flex items-center border-gray-200 svelte-1l8159u\">\n                    <button class=\"cursor-pointer w-6 h-6 text-gray-600 outline-none focus:outline-none\" onClick={() => this.dropDownClick()}>\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"2\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        class=\"feather feather-chevron-up w-4 h-4\"\n                      >\n                        <polyline points=\"18 15 12 9 6 15\"></polyline>\n                      </svg>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              {/* drop down list */}\n              {this.dropDownState && (\n                <div class=\"absolute shadow top-100 bg-white z-400 w-full lef-0 rounded max-h-select overflow-y-auto svelte-5uyqqj\">\n                  <div class=\"w-full\">\n                    {this.roles.map(item => (\n                      <div onClick={e => this.itemOnClick(e)} class=\"cursor-pointer w-full border-gray-100 border-b hover:bg-teal-100\">\n                        <div class=\"flex w-full items-center p-2 px-4 border-transparent border-l-2 relative border-teal-600\">\n                          <div class=\"w-full items-center flex\">\n                            <div class=\"mx-2 px-2 leading-6  \">{item}</div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}
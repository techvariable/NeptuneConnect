{"version":3,"sources":["src/components/settingsPage/side-bar/side-bar.css?tag=side-bar&encapsulation=scoped","src/components/settingsPage/side-bar/side-bar.tsx"],"names":["sideBarCss","SideBar","[object Object]","hostRef","this","apiExist","parsedPermissions","JSON","parse","permissions","axios","get","url","then","res","data","apiKey","api","name","user","catch","err","console","log","errorMessage","post","message","Swal","fire","position","icon","text","showConfirmButton","timer","error","title","delete","navigator","clipboard","writeText","h","Host","class","scope","clickHandler","copyToClipboard","color","xmlns","fill","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","d","varient","disabled","hasAccess","permission","deleteHandler","startIcon","id","createHandler","customClass"],"mappings":"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","sourcesContent":[":host {\n  display: block;\n}\n","import { Component, Host, h, State, Prop } from '@stencil/core';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { hasAccess } from '../../../utils/utils';\n\n@Component({\n  tag: 'side-bar',\n  styleUrl: 'side-bar.css',\n  scoped: true,\n})\nexport class SideBar {\n  @State() api: string;\n  @State() name: string;\n  @State() apiExist: boolean = false;\n  @Prop() url: string;\n  @Prop() permissions: string;\n  @State() parsedPermissions: [] = [];\n  componentWillLoad() {\n    this.parsedPermissions = JSON.parse(this.permissions);\n    return axios\n      .get(this.url)\n      .then(res => {\n        const data = res.data;\n        if (data.apiKey) {\n          this.api = data.apiKey;\n          this.name = data.user.name;\n          this.apiExist = true;\n        } else {\n          this.apiExist = false;\n        }\n      })\n      .catch(err => console.log('Error Found', err));\n\n    // temp code\n    // this.apiExist = true;\n    // this.name = 'Jintu Das';\n    // this.api = '456ytTYukdgh67996fGGt';\n  }\n\n  async createHandler() {\n    let errorMessage = '';\n    try {\n      // const res = await axios.post('api/settings');\n      const res = await axios.post(this.url);\n      const data = res.data;\n      this.api = data.apiKey;\n      this.name = data.user.name;\n      this.apiExist = true;\n      errorMessage = data.message;\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        text: 'New API key created!',\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: errorMessage,\n      });\n    }\n  }\n\n  async deleteHandler() {\n    try {\n      await axios.delete(this.url);\n      this.apiExist = false;\n      Swal.fire({\n        position: 'center',\n        icon: 'success',\n        text: 'API key deleted successfully!',\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    } catch (error) {\n      console.log(error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Something went wrong!',\n      });\n    }\n  }\n\n  copyToClipboard() {\n    navigator.clipboard.writeText(this.api);\n\n    Swal.fire({\n      position: 'center',\n      icon: 'success',\n      text: 'API key copied!',\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.apiExist ? (\n          <div class=\"overflow-x-auto shadow-md sm:rounded-lg\">\n            <table class=\"w-full text-sm text-left text-gray-500 \">\n              <thead class=\"text-xs text-gray-700 uppercase bg-gray-100 \">\n                <tr>\n                  <th scope=\"col\" class=\"px-6 py-3\">\n                    Name\n                  </th>\n                  <th scope=\"col\" class=\"px-6 py-3\">\n                    API Key\n                  </th>\n                  <th scope=\"col\" class=\"px-6 py-3\">\n                    <span class=\"sr-only\">Copy</span>\n                  </th>\n                  <th scope=\"col\" class=\"px-6 py-3\">\n                    <span class=\"sr-only\">Delete</span>\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr class=\"bg-white border-b \">\n                  <th scope=\"row\" class=\"px-6 py-4 font-medium text-gray-900 whitespace-nowrap\">\n                    {this.name}\n                  </th>\n                  <td class=\"px-6 py-4 \">{this.api}</td>\n\n                  <td class=\"px-6 py-4 text-right\">\n                    <icon-button-basic\n                      title=\"Copy to Clip Board\"\n                      clickHandler={() => this.copyToClipboard()}\n                      color=\"secondary\"\n                      icon={\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\n                          <path\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            d=\"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\"\n                          />\n                        </svg>\n                      }\n                    />\n                  </td>\n\n                  <td class=\"px-6 py-4 text-right\">\n                    <icon-label-submit-button\n                      title=\"Delete API key\"\n                      varient=\"text\"\n                      color=\"secondary\"\n                      disabled={!hasAccess(this.parsedPermissions, { name: 'settings', permission: 'delete' })}\n                      clickHandler={() => this.deleteHandler()}\n                      startIcon={\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\n                          <path\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                          />\n                        </svg>\n                      }\n                    ></icon-label-submit-button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div>\n            <p class=\"border-l-4 border-indigo-700 px-3 py-6 bg-indigo-100 text-indigo-700 flex gap-2 items-center rounded-[5px]\" id=\"warning-msg\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              You have no API key currently\n            </p>\n            <icon-label-submit-button\n              title=\"Create New API Key\"\n              clickHandler={() => this.createHandler()}\n              disabled={!hasAccess(this.parsedPermissions, { name: 'settings', permission: 'write' })}\n              color=\"secondary\"\n              customClass=\"mt-3\"\n            >\n              Create New Key\n            </icon-label-submit-button>\n          </div>\n        )}\n      </Host>\n    );\n  }\n}\n"]}
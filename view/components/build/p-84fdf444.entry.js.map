{"version":3,"sources":["src/components/userProfilePage/logs-table-component/logs-table-component.tsx"],"names":["LogsTableComponent","[object Object]","hostRef","this","isSearchMenuOpen","trList","i","rows","push","h","class","style","overflowY","maxWidth","maxHeight","overflow","tableHeader","map","item","scope","title","isLoading","colSpan","length","rowSpan","tableBody","isLoadingError","id","text-overflow:ellipsis","alias","max-width","click","clickable","slice","test","split","target","href","url","src","icon","alt"],"mappings":"+CAMaA,EAAkB,MAJ/BC,YAAAC,aAuBWC,KAAAC,iBAAmB,MAQ5BH,SACE,MAAMI,EAAS,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIH,KAAKI,KAAK,GAAID,IAAK,CACrCD,EAAOG,KACLC,EAAA,KAAA,KACEA,EAAA,KAAA,CAAIC,MAAM,qDAAmD,OAKnE,OACED,EAAA,MAAA,CAAKE,MAAO,CAAEC,UAAW,SACvBH,EAAA,MAAA,CAAKC,MAAM,2BAA2BC,MAAO,CAAEE,SAAU,SAAUC,UAAW,QAASC,SAAU,SAC/FN,EAAA,QAAA,CAAOC,MAAM,kEAEXD,EAAA,QAAA,CAAOC,MAAM,4BACXD,EAAA,KAAA,KACGN,KAAKa,YAAYC,KAAKC,GACrBT,EAAA,KAAA,CAAIU,MAAM,MAAMT,MAAM,oHACnBQ,EAAKE,SAeTjB,KAAKkB,WAAaZ,EAAA,KAAA,CAAIC,MAAM,kBAAgB,OAKhDP,KAAKkB,WACJZ,EAAA,QAAA,KACEA,EAAA,KAAA,KACEA,EAAA,KAAA,CAAIa,QAASnB,KAAKa,YAAYO,OAAQC,QAAS,GAAId,MAAM,qDACvDD,EAAA,mBAAA,OAEFA,EAAA,KAAA,CAAIC,MAAM,qDAAmD,MAG9DL,GAILI,EAAA,QAAA,CAAOC,MAAM,qCAEVP,KAAKsB,YACHtB,KAAKkB,YACLlB,KAAKuB,gBACNvB,KAAKsB,UAAUR,KAAKC,GAClBT,EAAA,KAAA,CAAIC,MAAM,gCACPP,KAAKa,YAAYC,KAAKU,GAErBlB,EAAA,KAAA,CAAAmB,yBAAA,KAA2BR,MAAOF,EAAKS,EAAGE,OAAMC,YAAY,OAAOpB,MAAM,sDACrEiB,EAAGI,MAAMC,UACTd,EAAKS,EAAGE,OAAON,OAAS,GACtBL,EAAKS,EAAGE,OAAOI,MAAM,EAAG,IAAM,MAC5B,8CAA8CC,KAAKhB,EAAKS,EAAGE,QAC7DX,EAAKS,EAAGE,OAAOI,MAAM,EAAG,IAAIE,MAAM,KAAK,GAAK,OAASjB,EAAKS,EAAGE,OAAOI,MAAM,GAAI,IAE9Ef,EAAKS,EAAGE,OAGVpB,EAAA,IAAA,CAAG2B,OAAO,SAASC,KAAMV,EAAGI,MAAMO,IAAMpB,EAAKS,EAAGE,OAAQnB,MAAM,0FAC5DD,EAAA,MAAA,CAAKC,MAAM,MAAM6B,IAAKZ,EAAGI,MAAMS,KAAMC,IAAI,SACzChC,EAAA,OAAA,CAAMC,MAAM,SAAO,iBAUjCP,KAAKkB,WAAalB,KAAKuB,gBACvBjB,EAAA,QAAA,KACEA,EAAA,KAAA,KACEA,EAAA,KAAA,CAAIa,QAASnB,KAAKa,YAAYO,OAAQC,QAAS,GAAId,MAAM,iEACvDD,EAAA,IAAA,KAAA,gBAEFA,EAAA,KAAA,CAAIC,MAAM,qDAAmD,MAE9DL","sourcesContent":["import { Component, h, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'logs-table-component',\n  scoped: true,\n})\nexport class LogsTableComponent {\n  @Prop() tableHeader: object[];\n  @Prop() tableBody: object[];\n  // @Prop() currentPage: number;\n  // @Prop() dataLength: string;\n  // @Prop() next: any;\n  // @Prop() prev: any;\n  // @Prop() limit: number;\n  @Prop() rows: number[];\n  // @Prop() rowsHandler: any;\n  // @Prop() toggleSortMethod: any;\n  // @Prop() searchMethod: any;\n  // @Prop() clearSearch: any;\n  @Prop() isLoading: boolean;\n  @Prop() isLoadingError: boolean;\n\n  @State() data: any;\n  @State() from: number;\n  @State() to: number;\n  @State() isSearchMenuOpen = false;\n  @State() value: string;\n\n  // componentWillRender() {\n  //   this.from = (this.currentPage - 1) * this.limit + 1;\n  //   this.to = this.currentPage * this.limit;\n  // }\n\n  render() {\n    const trList = [];\n    for (let i = 1; i < this.rows[0]; i++) {\n      trList.push(\n        <tr>\n          <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">&nbsp;</td>\n        </tr>,\n      );\n    }\n\n    return (\n      <div style={{ overflowY: 'auto' }}>\n        <div class=\"border-2 border-gray-500\" style={{ maxWidth: '100rem', maxHeight: '15rem', overflow: 'auto' }}>\n          <table class=\"table-auto h-full min-w-full divide-y divide-gray-200 relative\">\n            {/* Table Head */}\n            <thead class=\"bg-gray-100 sticky top-0\">\n              <tr>\n                {this.tableHeader.map((item: any) => (\n                  <th scope=\"col\" class=\"px-6 py-3 text-left text-xs font-semibold bg-gray-100 text-gray-500 hover:text-gray-700 uppercase tracking-wider\">\n                    {item.title}\n\n                    {/* {item?.filter?.sortable && (\n                      <button class=\"ml-3\" onClick={() => this.toggleSortMethod(item.title)}>\n                        {sort}\n                      </button>\n                    )} */}\n\n                    {/* {item?.filter?.searchable && (\n                      <drop-down searchMethod={(value, field) => this.searchMethod(value, field)} alias={item.alias} clearSearch={colName => this.clearSearch(colName)}>\n                        {search}\n                      </drop-down>\n                    )} */}\n                  </th>\n                ))}\n                {this.isLoading && <th class=\"text-gray-500 \">&nbsp;</th>}\n              </tr>\n            </thead>\n\n            {/* loading screen */}\n            {this.isLoading && (\n              <tbody>\n                <tr>\n                  <td colSpan={this.tableHeader.length} rowSpan={10} class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                    <loader-component></loader-component>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">&nbsp;</td>\n                </tr>\n\n                {trList}\n              </tbody>\n            )}\n\n            <tbody class=\"bg-white divide-y divide-gray-200\">\n              {/* loaded body */}\n              {this.tableBody &&\n                !this.isLoading &&\n                !this.isLoadingError &&\n                this.tableBody.map((item: any) => (\n                  <tr class=\"hover:bg-gray-100 transition\">\n                    {this.tableHeader.map((id: any) => (\n                      // <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">{item[id.alias]}</td>\n                      <td text-overflow:ellipsis title={item[id.alias]} max-width=\"50px\" class=\"px-6 py-3 whitespace-nowrap text-sm text-gray-900\">\n                        {!id.click.clickable ? (\n                          item[id.alias].length > 25 ? (\n                            item[id.alias].slice(0, 25) + '...'\n                          ) : /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z/.test(item[id.alias]) ? (\n                            item[id.alias].slice(0, 16).split('T')[0] + ' at ' + item[id.alias].slice(11, 19)\n                          ) : (\n                            item[id.alias]\n                          )\n                        ) : (\n                          <a target=\"_blank\" href={id.click.url + item[id.alias]} class=\"flex items-center py-1 px-4 text-base font-normal text-gray-900 rounded-lg bg-gray-200\">\n                            <img class=\"h-4\" src={id.click.icon} alt=\"icon\" />\n                            <span class=\"px-2 \">View</span>\n                          </a>\n                        )}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n            </tbody>\n\n            {/* error screen */}\n            {!this.isLoading && this.isLoadingError && (\n              <tbody>\n                <tr>\n                  <td colSpan={this.tableHeader.length} rowSpan={10} class=\"px-6 py-4 whitespace-nowrap text-sm text-center text-gray-900\">\n                    <p>Error Found</p>\n                  </td>\n                  <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">&nbsp;</td>\n                </tr>\n                {trList}\n              </tbody>\n            )}\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n"]}
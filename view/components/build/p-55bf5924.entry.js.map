{"version":3,"sources":["src/components/permissionPage/permission-editor/permission-editor.css?tag=permission-editor&encapsulation=scoped","src/components/permissionPage/permission-editor/permission-editor.tsx"],"names":["permissionEditorCss","myTheme","EditorView","theme","&","color","backgroundColor",".cm-content","caretColor","&.cm-focused .cm-cursor","borderLeftColor","&.cm-focused .cm-selectionBackground, ::selection",".cm-gutters","border","dark","themeConfig","Compartment","PermissionEditor","[object Object]","hostRef","this","parsedPermissions","isLoading","errorMessage","roles","resStatus","syncVal","e","selectedRole","target","value","fetchPermissionsResp","axios","get","url","transactionToAdd","view","state","update","changes","from","to","doc","toString","length","insert","formatJSON","data","dispatch","roleId","rolePermissionsResp","transaction","error","console","log","rolesRes","Array","id","fetchRolePermission","permissionExtensions","customSetup","json","updateListener","of","trim","dummyKeymap","localStorage","getItem","push","EditorState","create","extensions","parent","element","querySelector","JSON","parse","permissions","fetchRoles","isValid","isValidPermissionJson","String","res","put","roleName","err","_b","_a","response","message","delete","isDeleted","deletedPermissionName","usersWithAssignedRole","join","self","onRoleUpdateClick","keymap","key","h","Host","class","onChange","onRoleSelect","map","item","selected","refresh","style","maxHeight","overflowY","role","title","clickHandler","disabled","hasAccess","name","permission","loading","varient","onRoleDeleteHandler"],"mappings":"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","sourcesContent":[":host {\n  display: block;\n}\n","import { Component, h, Element, State, Prop, Host } from '@stencil/core';\nimport { EditorState } from '@codemirror/basic-setup';\nimport { Compartment } from '@codemirror/state';\nimport { EditorView, keymap } from '@codemirror/view';\nimport { json } from '@codemirror/lang-json';\nimport axios from 'axios';\nimport { formatJSON, hasAccess, isValidPermissionJson } from '../../../utils/utils';\nimport { customSetup } from '../../customSetup';\n\nlet myTheme = EditorView.theme(\n  {\n    '&': {\n      color: 'white',\n      backgroundColor: '#034',\n    },\n    '.cm-content': {\n      caretColor: '#0e9',\n    },\n    '&.cm-focused .cm-cursor': {\n      borderLeftColor: '#0e9',\n    },\n    '&.cm-focused .cm-selectionBackground, ::selection': {\n      backgroundColor: '#074',\n    },\n    '.cm-gutters': {\n      backgroundColor: '#045',\n      color: '#ddd',\n      border: 'none',\n    },\n  },\n  { dark: true },\n);\n\nconst themeConfig = new Compartment();\n@Component({\n  tag: 'permission-editor',\n  styleUrl: 'permission-editor.css',\n  scoped: true,\n})\nexport class PermissionEditor {\n  @Prop() url: string;\n  @Prop() permissions: string;\n\n  @State() parsedPermissions: [] = [];\n  @State() selectedRole: Number;\n  @State() view: EditorView;\n  @State() state: EditorState;\n  @State() isLoading = false;\n  @State() errorMessage: string = '';\n  @State() roles: Array<{ roleName: string; id: number }> = [];\n  @State() resStatus: string = '';\n  @State() syncVal: string = '';\n\n  @Element() element: HTMLElement;\n\n  async onRoleSelect(e) {\n    this.errorMessage = '';\n    this.resStatus = '';\n    const selectedRole: number = e.target.value;\n    this.selectedRole = selectedRole;\n\n    const fetchPermissionsResp = await axios.get(`${this.url}/?roleId=${selectedRole}`);\n\n    let transactionToAdd = this.view.state.update({\n      changes: { from: 0, to: this.view.state.doc.toString().length, insert: `${formatJSON(fetchPermissionsResp.data)}` },\n    });\n    this.view.dispatch(transactionToAdd);\n  }\n\n  async fetchRolePermission(roleId: number) {\n    try {\n      const rolePermissionsResp = await axios.get(`${this.url}/?roleId=${roleId}`);\n      let transaction = this.view.state.update({ changes: { from: 0, to: this.view.state.doc.toString().length, insert: `${formatJSON(rolePermissionsResp.data)}` } });\n      this.view.dispatch(transaction);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async fetchRoles() {\n    try {\n      const rolesRes = await axios.get(`${this.url}/all`);\n      const roles = rolesRes.data;\n\n      if (roles instanceof Array && roles.length > 0) {\n        this.selectedRole = roles[0].id;\n        this.roles = roles;\n        await this.fetchRolePermission(roles[0].id);\n      }\n    } catch (error) {\n      console.log({ error });\n    }\n  }\n\n  componentDidLoad() {\n    const permissionExtensions = [\n      customSetup,\n      json(),\n      EditorView.updateListener.of(e => {\n        this.syncVal = e.state.doc.toString().trim();\n      }),\n      this.dummyKeymap(),\n    ];\n    if (localStorage.getItem('themesArray') === 'dark') {\n      permissionExtensions.push(themeConfig.of([myTheme]));\n    }\n    this.state = EditorState.create({\n      doc: '\\n\\n\\n\\n',\n      extensions: permissionExtensions,\n    });\n    this.view = new EditorView({\n      state: this.state,\n      parent: this.element.querySelector('#permissionEditor'),\n    });\n\n    this.parsedPermissions = JSON.parse(this.permissions || '[]');\n    this.fetchRoles();\n  }\n\n  async onRoleUpdateClick() {\n    if (this.syncVal !== '') {\n      try {\n        this.isLoading = true;\n        this.errorMessage = '';\n        this.resStatus = '';\n        let transaction = this.view.state.update();\n        this.view.dispatch(transaction);\n\n        const { isValid, error } = isValidPermissionJson(String(transaction.state.doc));\n\n        if (isValid) {\n          this.isLoading = true;\n          const permissions = String(transaction.state.doc);\n\n          const res = await axios.put(this.url, {\n            permissions,\n            roleId: this.selectedRole,\n          });\n\n          this.resStatus = `Permissions for ${res.data.roleName} updated successfully`;\n        } else {\n          this.errorMessage = error;\n        }\n      } catch (err) {\n        console.error(err);\n        this.errorMessage = err?.response?.data?.message || 'Failed to update the permission';\n      }\n      this.isLoading = false;\n    }\n  }\n\n  async onRoleDeleteHandler() {\n    if (this.syncVal !== '') {\n      try {\n        this.isLoading = true;\n        this.errorMessage = '';\n        this.resStatus = '';\n        let transaction = this.view.state.update();\n        this.view.dispatch(transaction);\n\n        this.isLoading = true;\n\n        const res = await axios.delete(`${this.url}/?roleId=${this.selectedRole}`);\n        if (res.data.isDeleted === true) {\n          this.resStatus = `${res.data.deletedPermissionName} is deleted successfully`;\n          this.isLoading = false;\n          this.errorMessage = '';\n          this.fetchRoles();\n        }\n      } catch (err) {\n        if (err.response.data.isDeleted === false) {\n          this.isLoading = false;\n          this.errorMessage = `${err.response.data.deletedPermissionName} is assigned to  ${\n            err.response.data.usersWithAssignedRole.length\n          } user with email \\n\\n ${err.response.data.usersWithAssignedRole.join(',')}`;\n        } else if (err.response.data.message) {\n          this.isLoading = false;\n          this.errorMessage = `${err.response.data.message}`;\n        }\n      }\n      this.isLoading = false;\n    }\n  }\n\n  dummyKeymap() {\n    let self = this.onRoleUpdateClick;\n    return keymap.of([\n      {\n        key: 'Ctrl-Shift-Enter',\n        run() {\n          self();\n          return true;\n        },\n      },\n    ]);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"w-auto border rounded-md border-gray-300 shadow-gray-300 py-2 px-3 space-y-2\">\n          <div class=\"flex justify-between items-center\">\n            <div class=\"border border-gray-300 space-x-3 rounded-md shadow-gray-300 p-2 m-1\">\n              <span class=\"pb-6 text-md font-bold leading-7 text-gray-600\">Select Role : </span>\n              <select\n                onChange={e => this.onRoleSelect(e)}\n                class=\"form-select px-3 py-1.5 border-none text-inherit font-inherit text-gray-700 bg-transparent bg-clip-padding bg-no-repeat rounded-md transition ease-in-out focus:text-gray-700 focus:bg-white focus:border-blue-600 focus:outline-none\"\n              >\n                {this.roles.map(item => (\n                  <option class=\"rounded-md hover:bg-gray-200 hover:text-gray-600\" selected={this.selectedRole === item.id} value={`${item.id}`}>\n                    {item.roleName}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <add-role parsedPermissions={this.parsedPermissions} refresh={() => this.fetchRoles()} url={this.url}></add-role>\n          </div>\n          <div style={{ maxHeight: '40rem', overflowY: 'auto' }} class=\"border-2 custom-scrollbar \">\n            <div id=\"permissionEditor\" class=\"border border-gray-300\"></div>\n          </div>\n          {this.errorMessage !== '' ? <p class=\"px-3 py-2 bg-indigo-200 text-indigo-800 border-l-4 border-indigo-600 w-full -mt-4 mb-6\">{this.errorMessage}</p> : null}\n          {this.errorMessage === '' && this.resStatus !== '' && (\n            <div class=\"flex items-center bg-gray-500 text-white text-sm font-bold px-4 py-3\" role=\"alert\">\n              <p>{this.resStatus}</p>\n            </div>\n          )}\n          <div class=\"flex justify-between gap-4\">\n            <div class=\"flex gap-4\">\n              <icon-label-submit-button\n                title=\"Update Role\"\n                clickHandler={() => this.onRoleUpdateClick()}\n                disabled={this.syncVal === '' || !hasAccess(this.parsedPermissions, { name: 'permissions', permission: 'update' }) || this.isLoading}\n                loading={this.isLoading}\n                varient=\"outlined\"\n                color=\"tertiary\"\n              >\n                Update\n              </icon-label-submit-button>\n\n              <icon-label-submit-button\n                title=\"Delete Current Role\"\n                clickHandler={() => this.onRoleDeleteHandler()}\n                disabled={this.syncVal === '' || !hasAccess(this.parsedPermissions, { name: 'permissions', permission: 'delete' }) || this.isLoading}\n                varient=\"outlined\"\n                color=\"primary\"\n              >\n                Delete\n              </icon-label-submit-button>\n            </div>\n            <div class=\"mx-4\">{this.isLoading && <loader-component></loader-component>}</div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}